/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 59 generated on 2012-06-28 08:17:52.758855
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifdef IKFAST_HEADER
#include IKFAST_HEADER
#endif

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IKReal)6.28318530717959)
#define IKPI  ((IKReal)3.14159265358979)
#define IKPI_2  ((IKReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// defined when creating a shared object/dll
#ifdef IKFAST_CLIBRARY
#ifdef _MSC_VER
#define IKFAST_API extern "C" __declspec(dllexport)
#else
#define IKFAST_API extern "C"
#endif
#else
#define IKFAST_API
#endif

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

#ifdef IKFAST_REAL
typedef IKFAST_REAL IKReal;
#else
typedef double IKReal;
#endif

class IKSolution
{
public:
    /// Gets a solution given its free parameters
    /// \param pfree The free parameters required, range is in [-pi,pi]
    void GetSolution(IKReal* psolution, const IKReal* pfree) const {
        for(std::size_t i = 0; i < basesol.size(); ++i) {
            if( basesol[i].freeind < 0 )
                psolution[i] = basesol[i].foffset;
            else {
                IKFAST_ASSERT(pfree != NULL);
                psolution[i] = pfree[basesol[i].freeind]*basesol[i].fmul + basesol[i].foffset;
                if( psolution[i] > IKPI ) {
                    psolution[i] -= IK2PI;
                }
                else if( psolution[i] < -IKPI ) {
                    psolution[i] += IK2PI;
                }
            }
        }
    }

    /// Gets the free parameters the solution requires to be set before a full solution can be returned
    /// \return vector of indices indicating the free parameters
    const std::vector<int>& GetFree() const { return vfree; }

    struct VARIABLE
    {
        VARIABLE() : fmul(0), foffset(0), freeind(-1), maxsolutions(1) {
            indices[0] = indices[1] = -1;
        }
        IKReal fmul, foffset; ///< joint value is fmul*sol[freeind]+foffset
        signed char freeind; ///< if >= 0, mimics another joint
        unsigned char maxsolutions; ///< max possible indices, 0 if controlled by free index or a free joint itself
        unsigned char indices[2]; ///< unique index of the solution used to keep track on what part it came from. sometimes a solution can be repeated for different indices. store at least another repeated root
    };

    std::vector<VARIABLE> basesol;       ///< solution and their offsets if joints are mimiced
    std::vector<int> vfree;

    bool Validate() const {
        for(size_t i = 0; i < basesol.size(); ++i) {
            if( basesol[i].maxsolutions == (unsigned char)-1) {
                return false;
            }
            if( basesol[i].maxsolutions > 0 ) {
                if( basesol[i].indices[0] >= basesol[i].maxsolutions ) {
                    return false;
                }
                if( basesol[i].indices[1] != (unsigned char)-1 && basesol[i].indices[1] >= basesol[i].maxsolutions ) {
                    return false;
                }
            }
        }
        return true;
    }

    void GetSolutionIndices(std::vector<unsigned int>& v) const {
        v.resize(0);
        v.push_back(0);
        for(int i = (int)basesol.size()-1; i >= 0; --i) {
            if( basesol[i].maxsolutions != (unsigned char)-1 && basesol[i].maxsolutions > 1 ) {
                for(size_t j = 0; j < v.size(); ++j) {
                    v[j] *= basesol[i].maxsolutions;
                }
                size_t orgsize=v.size();
                if( basesol[i].indices[1] != (unsigned char)-1 ) {
                    for(size_t j = 0; j < orgsize; ++j) {
                        v.push_back(v[j]+basesol[i].indices[1]);
                    }
                }
                if( basesol[i].indices[0] != (unsigned char)-1 ) {
                    for(size_t j = 0; j < orgsize; ++j) {
                        v[j] += basesol[i].indices[0];
                    }
                }
            }
        }
    }
};

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IKReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IKReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IKReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void fk(const IKReal* j, IKReal* eetrans, IKReal* eerot) {

// necessary for local/global translation3d
eerot[0] = eerot[4] = eerot[8] = 0;
IKReal r00 = 0, r11 = 0, r22 = 0;
IKReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35;
x0=IKsin(j[0]);
x1=IKsin(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[1]);
x4=IKcos(j[2]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKcos(j[4]);
x8=IKcos(j[0]);
x9=IKsin(j[4]);
x10=((IKReal(-0.000918980000000000))+(r00));
x11=((IKReal(0.0400000000000000))+(r11));
x12=((IKReal(1.00000000000000))*(r22));
x13=((IKReal(0.135000000000000))*(x0));
x14=((IKReal(1.00000000000000))*(x0));
x15=((IKReal(0.00233126000000000))*(x8));
x16=((IKReal(0.130000000000000))*(x8));
x17=((IKReal(0.00233126000000000))*(x0));
x18=((IKReal(0.130000000000000))*(x0));
x19=((IKReal(0.135000000000000))*(x8));
x20=((IKReal(1.00000000000000))*(x8));
x21=((IKReal(0.155000000000000))*(x1));
x22=((x3)*(x4));
x23=((x2)*(x3));
x24=((x1)*(x2));
x25=((x1)*(x4));
x26=((x17)*(x2));
x27=((IKReal(0.130000000000000))*(x25));
x28=((x14)*(x22));
x29=((x20)*(x24));
x30=((((IKReal(-1.00000000000000))*(x24)))+(((IKReal(1.00000000000000))*(x22))));
x31=((x14)*(((x25)+(x23))));
x32=((x20)*(((((IKReal(-1.00000000000000))*(x23)))+(((IKReal(-1.00000000000000))*(x25))))));
x33=((((x30)*(x5)))+(((x6)*(((x25)+(x23))))));
x34=((((x31)*(x5)))+(((x6)*(((((x0)*(x24)))+(((IKReal(-1.00000000000000))*(x28))))))));
x35=((((x32)*(x5)))+(((x6)*(((((x22)*(x8)))+(((IKReal(-1.00000000000000))*(x29))))))));
IKReal x36=((IKReal(1.00000000000000))*(x17));
IKReal x37=((IKReal(1.00000000000000))*(x24));
eetrans[0]=((((IKReal(-0.0330000000000000))*(x0)))+(((x0)*(x21)))+(((IKReal(-1.00000000000000))*(x12)*(((((x34)*(x7)))+(((IKReal(-1.00000000000000))*(x20)*(x9)))))))+(((x5)*(((((IKReal(-1.00000000000000))*(x23)*(x36)))+(((IKReal(-1.00000000000000))*(x25)*(x36)))))))+(((x6)*(((((x18)*(x23)))+(((x18)*(x25)))))))+(((x6)*(((((x17)*(x22)))+(((IKReal(-1.00000000000000))*(x24)*(x36)))))))+(((x5)*(((((x18)*(x22)))+(((IKReal(-1.00000000000000))*(x18)*(x37)))))))+(((x13)*(x23)))+(((x13)*(x25)))+(((x10)*(((((x7)*(x8)))+(((x34)*(x9)))))))+(((x11)*(((((x31)*(x6)))+(((x5)*(((x28)+(((IKReal(-1.00000000000000))*(x14)*(x37))))))))))));
IKReal x38=((IKReal(1.00000000000000))*(x25));
IKReal x39=((IKReal(1.00000000000000))*(x23));
IKReal x40=((IKReal(1.00000000000000))*(x22));
eetrans[1]=((IKReal(0.166000000000000))+(((IKReal(-1.00000000000000))*(x21)*(x8)))+(((x10)*(((((x0)*(x7)))+(((x35)*(x9)))))))+(((x5)*(((((x16)*(x24)))+(((IKReal(-1.00000000000000))*(x16)*(x40)))))))+(((IKReal(0.0330000000000000))*(x8)))+(((IKReal(-1.00000000000000))*(x12)*(((((x35)*(x7)))+(((IKReal(-1.00000000000000))*(x14)*(x9)))))))+(((x11)*(((((x32)*(x6)))+(((x5)*(((((IKReal(-1.00000000000000))*(x20)*(x40)))+(x29)))))))))+(((x5)*(((((x15)*(x25)))+(((x15)*(x23)))))))+(((x6)*(((((IKReal(-1.00000000000000))*(x15)*(x40)))+(((x15)*(x24)))))))+(((IKReal(-1.00000000000000))*(x19)*(x38)))+(((IKReal(-1.00000000000000))*(x19)*(x39)))+(((x6)*(((((IKReal(-1.00000000000000))*(x16)*(x39)))+(((IKReal(-1.00000000000000))*(x16)*(x38))))))));
eetrans[2]=((IKReal(0.253000000000000))+(((x6)*(((((IKReal(-0.00233126000000000))*(x25)))+(((IKReal(-0.00233126000000000))*(x23)))))))+(((IKReal(0.155000000000000))*(x3)))+(((x11)*(((((x30)*(x6)))+(((x5)*(((((IKReal(-1.00000000000000))*(x23)))+(((IKReal(-1.00000000000000))*(x25)))))))))))+(((x6)*(((((IKReal(0.130000000000000))*(x22)))+(((IKReal(-0.130000000000000))*(x24)))))))+(((x5)*(((((IKReal(-1.00000000000000))*(x27)))+(((IKReal(-0.130000000000000))*(x23)))))))+(((IKReal(-0.135000000000000))*(x24)))+(((IKReal(-1.00000000000000))*(x12)*(x33)*(x7)))+(((IKReal(0.135000000000000))*(x22)))+(((x10)*(x33)*(x9)))+(((x5)*(((((IKReal(0.00233126000000000))*(x24)))+(((IKReal(-0.00233126000000000))*(x22))))))));
}

IKFAST_API int getNumFreeParameters() { return 2; }
IKFAST_API int* getFreeParameters() { static int freeparams[] = {3, 4}; return freeparams; }
IKFAST_API int getNumJoints() { return 5; }

IKFAST_API int getIKRealSize() { return sizeof(IKReal); }

IKFAST_API int getIKType() { return 0x3600000a; }

class IKSolver {
public:
IKReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
j1=numeric_limits<IKReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IKReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IKReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1;  _ij4[0] = -1; _ij4[1] = -1; _nj4 = 0;  _ij5[0] = -1; _ij5[1] = -1; _nj5 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    vsolutions.resize(0); vsolutions.reserve(8);
j4=pfree[0]; cj4=cos(pfree[0]); sj4=sin(pfree[0]);
j5=pfree[1]; cj5=cos(pfree[1]); sj5=sin(pfree[1]);
r00 = eerot[0];
r11 = eerot[4];
r22 = eerot[8];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_px=px;
new_py=((IKReal(-0.166000000000000))+(py));
new_pz=((IKReal(-0.253000000000000))+(pz));
px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
{
IKReal dummyeval[1];
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IKReal dummyeval[1];
dummyeval[0]=(((px)*(px))+((py)*(py)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs(((IKReal(-1.00000000000000))*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IKReal(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x41=((IKReal(1.00000000000000))*(IKatan2(((IKReal(-1.00000000000000))*(px)), ((IKReal(-1.00000000000000))*(py)))));
if( ((((px)*(px))+((py)*(py)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IKReal)1.0e30))*(((((IKReal(-0.000918980000000000))*(cj5)))+(((r22)*(sj5)))+(((cj5)*(r00))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IKReal)1.0e30))*(((((IKReal(-0.000918980000000000))*(cj5)))+(((r22)*(sj5)))+(((cj5)*(r00))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x42=IKasin(((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IKReal)1.0e30))*(((((IKReal(-0.000918980000000000))*(cj5)))+(((r22)*(sj5)))+(((cj5)*(r00)))))));
j1array[0]=((((IKReal(-1.00000000000000))*(x42)))+(((IKReal(-1.00000000000000))*(x41))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=((IKReal(3.14159265358979))+(((IKReal(-1.00000000000000))*(x41)))+(x42));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
for(int ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

{
IKReal dummyeval[1];
IKReal x43=((px)*(sj1));
IKReal x44=((cj1)*(py));
dummyeval[0]=((IKReal(1.00000000000000))+(((IKReal(918.273645546373))*((x43)*(x43))))+(((IKReal(918.273645546373))*((pz)*(pz))))+(((IKReal(918.273645546373))*((x44)*(x44))))+(((IKReal(-1836.54729109275))*(x43)*(x44)))+(((IKReal(60.6060606060606))*(x43)))+(((IKReal(-60.6060606060606))*(x44))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IKReal dummyeval[1];
IKReal x45=((px)*(sj1));
IKReal x46=((cj1)*(py));
dummyeval[0]=((IKReal(1.00000000000000))+(((IKReal(918.273645546373))*((pz)*(pz))))+(((IKReal(918.273645546373))*((x46)*(x46))))+(((IKReal(60.6060606060606))*(x45)))+(((IKReal(-1836.54729109275))*(x45)*(x46)))+(((IKReal(918.273645546373))*((x45)*(x45))))+(((IKReal(-60.6060606060606))*(x46))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IKReal dummyeval[1];
IKReal x47=(cj4)*(cj4);
IKReal x48=(sj4)*(sj4);
IKReal x49=(sj5)*(sj5);
IKReal x50=(r00)*(r00);
IKReal x51=(cj5)*(cj5);
IKReal x52=(r22)*(r22);
IKReal x53=(r11)*(r11);
IKReal x54=((IKReal(402593.535786448))*(r11));
IKReal x55=((IKReal(5.07358157957736))*(sj5));
IKReal x56=((sj4)*(sj5));
IKReal x57=((IKReal(2176.32592657076))*(r00));
IKReal x58=((IKReal(2176.32592657076))*(sj5));
IKReal x59=((IKReal(1184098.63466602))*(x50));
IKReal x60=((IKReal(2368197.26933205))*(r00)*(sj5));
IKReal x61=((IKReal(1184098.63466602))*(x53));
IKReal x62=((IKReal(5520.88356610302))*(r00)*(sj5));
IKReal x63=((cj5)*(r22)*(x48));
IKReal x64=((x48)*(x49));
IKReal x65=((x47)*(x49));
IKReal x66=((cj5)*(r22)*(x47));
IKReal x67=((IKReal(1184098.63466602))*(x51)*(x52));
dummyeval[0]=((IKReal(21580.1976167883))+(((IKReal(5520.88356610302))*(x66)))+(((IKReal(5520.88356610302))*(x63)))+(((IKReal(54350.1273311704))*(cj4)))+(((x59)*(x65)))+(((x59)*(x64)))+(((IKReal(319706.631359826))*(cj4)*(r11)))+(((x58)*(x66)))+(((x58)*(x63)))+(((IKReal(-319706.631359826))*(cj5)*(r22)*(sj4)))+(((IKReal(319706.631359826))*(r00)*(x56)))+(((IKReal(-293.804000087053))*(x56)))+(((IKReal(-1.00000000000000))*(x48)*(x62)))+(((IKReal(-745.319281423908))*(sj4)))+(((IKReal(-1.00000000000000))*(x47)*(x62)))+(x64)+(x65)+(((x48)*(x55)))+(((x48)*(x54)))+(((x48)*(x61)))+(((x48)*(x67)))+(((x47)*(x55)))+(((x47)*(x54)))+(((IKReal(-1.00000000000000))*(x57)*(x65)))+(((IKReal(-1.00000000000000))*(x57)*(x64)))+(((IKReal(-1.00000000000000))*(x60)*(x63)))+(((IKReal(-1.00000000000000))*(x60)*(x66)))+(((x47)*(x61)))+(((x47)*(x67)))+(((IKReal(34226.8858493592))*(x48)))+(((IKReal(34226.8858493592))*(x47))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
IKReal x68=((IKReal(0.310000000000000))*(cj4));
IKReal x69=((cj5)*(r22));
IKReal x70=((IKReal(0.000284883800000000))*(sj5));
IKReal x71=((IKReal(0.310000000000000))*(sj4));
IKReal x72=((r00)*(sj5));
IKReal x73=((sj4)*(x72));
IKReal x74=((((IKReal(-1.00000000000000))*(cj4)*(x70)))+(((IKReal(-0.000722690600000000))*(cj4)))+(((x68)*(x72)))+(((IKReal(-1.00000000000000))*(x68)*(x69)))+(((IKReal(-1.00000000000000))*(r11)*(x71)))+(((IKReal(-0.0527000000000000))*(sj4))));
IKReal x75=((IKReal(0.0418500000000000))+(((IKReal(0.0527000000000000))*(cj4)))+(((r11)*(x68)))+(((IKReal(-0.000722690600000000))*(sj4)))+(((IKReal(-1.00000000000000))*(sj4)*(x70)))+(((IKReal(-1.00000000000000))*(x69)*(x71)))+(((x71)*(x72))));
if( IKabs(x75) < IKFAST_ATAN2_MAGTHRESH && IKabs(x74) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x76=((IKReal(1.00000000000000))*(IKatan2(x75, x74)));
if( ((((x75)*(x75))+((x74)*(x74)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((x75)*(x75))+((x74)*(x74)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((x75)*(x75))+((x74)*(x74))))))):(IKReal)1.0e30))*(((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(px)*(sj1)))+(((IKReal(-0.00466252000000000))*(x72)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.270000000000000))*(sj4)*(x69)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.270000000000000))*(x73)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x69))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((x75)*(x75))+((x74)*(x74)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((x75)*(x75))+((x74)*(x74))))))):(IKReal)1.0e30))*(((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(px)*(sj1)))+(((IKReal(-0.00466252000000000))*(x72)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.270000000000000))*(sj4)*(x69)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.270000000000000))*(x73)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x69))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x77=IKasin(((((IKabs(IKabs(IKsqrt((((x75)*(x75))+((x74)*(x74)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((x75)*(x75))+((x74)*(x74))))))):(IKReal)1.0e30))*(((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(px)*(sj1)))+(((IKReal(-0.00466252000000000))*(x72)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.270000000000000))*(sj4)*(x69)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.270000000000000))*(x73)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x69)))))));
j3array[0]=((((IKReal(-1.00000000000000))*(x76)))+(((IKReal(-1.00000000000000))*(x77))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=((IKReal(3.14159265358979))+(((IKReal(-1.00000000000000))*(x76)))+(x77));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IKReal dummyeval[1];
IKReal gconst0;
IKReal x78=((px)*(sj1));
IKReal x79=((cj1)*(py));
gconst0=IKsign(((IKReal(0.00108900000000000))+((x79)*(x79))+((pz)*(pz))+(((IKReal(-2.00000000000000))*(x78)*(x79)))+(((IKReal(-0.0660000000000000))*(x79)))+((x78)*(x78))+(((IKReal(0.0660000000000000))*(x78)))));
IKReal x80=((px)*(sj1));
IKReal x81=((cj1)*(py));
dummyeval[0]=((IKReal(1.00000000000000))+(((IKReal(918.273645546373))*((x81)*(x81))))+(((IKReal(918.273645546373))*((pz)*(pz))))+(((IKReal(60.6060606060606))*(x80)))+(((IKReal(918.273645546373))*((x80)*(x80))))+(((IKReal(-1836.54729109275))*(x80)*(x81)))+(((IKReal(-60.6060606060606))*(x81))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((gconst0)*(((IKReal(0.00511500000000000))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj3)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(-0.135000000000000))*(cj1)*(cj3)*(py)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(0.00445500000000000))*(cj3)))+(((cj1)*(py)*(r11)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(pz)*(r11)*(sj4)))+(((IKReal(0.00233126000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(0.135000000000000))*(cj3)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(cj5)*(pz)*(r22)))+(((cj4)*(px)*(r00)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj3)*(py)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(-0.000918980000000000))*(cj3)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r00)*(sj4)*(sj5)))+(((cj3)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(px)*(sj1)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.00561000000000000))*(cj3)*(cj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj3)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj3)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj3)*(sj4)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj3)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj3)*(sj5)))+(((cj1)*(cj3)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj3)*(sj4)))+(((IKReal(-0.135000000000000))*(pz)*(sj3)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((cj5)*(pz)*(r22)*(sj3)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(py)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj3)*(sj5)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj5)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj3)))+(((cj3)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(cj4)*(pz)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj3)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(-0.00233126000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj3)*(sj5)))+(((cj3)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-0.155000000000000))*(cj1)*(py)))+(((IKReal(-7.69315800000000e-5))*(cj3)*(sj4)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IKReal(-3.03263400000000e-5))*(sj3)*(sj4)*(sj5)))+(((cj4)*(pz)*(r00)*(sj3)*(sj5)))+(((IKReal(0.135000000000000))*(cj3)*(pz)))+(((IKReal(0.170000000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(pz)*(sj4)*(sj5)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.00445500000000000))*(sj3)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((cj3)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((cj3)*(cj4)*(pz)*(r11)))+(((cj1)*(cj5)*(py)*(r22)*(sj3)*(sj4)))+(((cj3)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(cj5)*(r22)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj3)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(0.0330000000000000))*(cj3)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj4)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj3)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj3)))+(((IKReal(-7.69315800000000e-5))*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(pz)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(cj5)*(py)*(r22)))+(((cj1)*(cj3)*(cj4)*(py)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj3)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj3)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj3)))+(((IKReal(0.00233126000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((cj3)*(px)*(r11)*(sj1)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj3)*(cj4)*(py)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj3)*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj3)*(sj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj3)))+(((IKReal(0.000918980000000000))*(cj3)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(7.69315800000000e-5))*(cj3)*(cj4)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj3)))+(((IKReal(3.03263400000000e-5))*(cj3)*(cj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj3)*(pz)*(sj4)))+(((px)*(r00)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(px)*(r00)*(sj1)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((IKReal(0.00511500000000000))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj3)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(-0.135000000000000))*(cj1)*(cj3)*(py)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(0.00445500000000000))*(cj3)))+(((cj1)*(py)*(r11)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(pz)*(r11)*(sj4)))+(((IKReal(0.00233126000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(0.135000000000000))*(cj3)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(cj5)*(pz)*(r22)))+(((cj4)*(px)*(r00)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj3)*(py)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(-0.000918980000000000))*(cj3)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r00)*(sj4)*(sj5)))+(((cj3)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(px)*(sj1)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.00561000000000000))*(cj3)*(cj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj3)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj3)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj3)*(sj4)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj3)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj3)*(sj5)))+(((cj1)*(cj3)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj3)*(sj4)))+(((IKReal(-0.135000000000000))*(pz)*(sj3)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((cj5)*(pz)*(r22)*(sj3)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(py)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj3)*(sj5)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj5)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj3)))+(((cj3)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(cj4)*(pz)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj3)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(-0.00233126000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj3)*(sj5)))+(((cj3)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-0.155000000000000))*(cj1)*(py)))+(((IKReal(-7.69315800000000e-5))*(cj3)*(sj4)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj3)))))), ((gconst0)*(((((IKReal(-3.03263400000000e-5))*(sj3)*(sj4)*(sj5)))+(((cj4)*(pz)*(r00)*(sj3)*(sj5)))+(((IKReal(0.135000000000000))*(cj3)*(pz)))+(((IKReal(0.170000000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(pz)*(sj4)*(sj5)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.00445500000000000))*(sj3)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((cj3)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((cj3)*(cj4)*(pz)*(r11)))+(((cj1)*(cj5)*(py)*(r22)*(sj3)*(sj4)))+(((cj3)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(cj5)*(r22)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj3)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(0.0330000000000000))*(cj3)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj4)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj3)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj3)))+(((IKReal(-7.69315800000000e-5))*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(pz)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(cj5)*(py)*(r22)))+(((cj1)*(cj3)*(cj4)*(py)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj3)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj3)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj3)))+(((IKReal(0.00233126000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((cj3)*(px)*(r11)*(sj1)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj3)*(cj4)*(py)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj3)*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj3)*(sj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj3)))+(((IKReal(0.000918980000000000))*(cj3)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(7.69315800000000e-5))*(cj3)*(cj4)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj3)))+(((IKReal(3.03263400000000e-5))*(cj3)*(cj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj3)*(pz)*(sj4)))+(((px)*(r00)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(px)*(r00)*(sj1)*(sj5)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IKReal evalcond[5];
IKReal x82=IKsin(j2);
IKReal x83=IKcos(j2);
IKReal x84=((sj3)*(sj4));
IKReal x85=((IKReal(0.000918980000000000))*(sj5));
IKReal x86=((cj5)*(r22));
IKReal x87=((IKReal(1.00000000000000))*(cj4));
IKReal x88=((px)*(sj1));
IKReal x89=((IKReal(0.00233126000000000))*(cj4));
IKReal x90=((cj3)*(sj4));
IKReal x91=((cj4)*(sj3));
IKReal x92=((r00)*(sj5));
IKReal x93=((cj3)*(cj4));
IKReal x94=((IKReal(0.270000000000000))*(sj4));
IKReal x95=((IKReal(1.00000000000000))*(r11));
IKReal x96=((cj1)*(py));
IKReal x97=((IKReal(0.135000000000000))*(sj3));
IKReal x98=((cj3)*(x83));
IKReal x99=((r11)*(x82));
IKReal x100=((IKReal(0.00233126000000000))*(x83));
IKReal x101=((IKReal(1.00000000000000))*(x82));
IKReal x102=((IKReal(0.170000000000000))*(x83));
IKReal x103=((cj3)*(x82));
IKReal x104=((IKReal(0.170000000000000))*(x82));
IKReal x105=((IKReal(0.00233126000000000))*(x82));
IKReal x106=((sj3)*(x83));
IKReal x107=((IKReal(0.310000000000000))*(x82));
IKReal x108=((IKReal(1.00000000000000))*(x83));
IKReal x109=((pz)*(x83));
IKReal x110=((x82)*(x91));
evalcond[0]=((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(-1.00000000000000))*(x107)*(x96)))+(((IKReal(0.0459000000000000))*(cj4)))+(((x107)*(x88)))+(((x92)*(x94)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-1.00000000000000))*(x86)*(x94)))+(((IKReal(-0.00466252000000000))*(x92)))+(((IKReal(0.0660000000000000))*(x96)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(0.310000000000000))*(x109)))+(((IKReal(-0.0660000000000000))*(x88)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x86)))+(((IKReal(0.0102300000000000))*(x82))));
evalcond[1]=((IKReal(-0.155000000000000))+(((IKReal(-1.00000000000000))*(sj3)*(x87)*(x92)))+(((IKReal(-0.135000000000000))*(cj3)))+(((IKReal(-1.00000000000000))*(cj3)*(r11)*(x87)))+(((x82)*(x88)))+(((r11)*(x84)))+(((IKReal(0.170000000000000))*(x84)))+(((x86)*(x91)))+(((x86)*(x90)))+(((IKReal(-1.00000000000000))*(x90)*(x92)))+(((x85)*(x90)))+(((x85)*(x91)))+(x109)+(((IKReal(-0.170000000000000))*(x93)))+(((IKReal(-1.00000000000000))*(x101)*(x96)))+(((IKReal(0.0330000000000000))*(x82)))+(((IKReal(0.00233126000000000))*(x90)))+(((sj3)*(x89))));
evalcond[2]=((((IKReal(-1.00000000000000))*(pz)*(x101)))+(((x84)*(x86)))+(((x84)*(x85)))+(((IKReal(-1.00000000000000))*(r11)*(sj3)*(x87)))+(((x92)*(x93)))+(((IKReal(-1.00000000000000))*(x90)*(x95)))+(((IKReal(-1.00000000000000))*(x84)*(x92)))+(((IKReal(-1.00000000000000))*(cj3)*(x86)*(x87)))+(((IKReal(-0.170000000000000))*(x91)))+(((IKReal(-0.170000000000000))*(x90)))+(((x83)*(x88)))+(((IKReal(0.0330000000000000))*(x83)))+(((IKReal(-1.00000000000000))*(x97)))+(((IKReal(-1.00000000000000))*(x108)*(x96)))+(((IKReal(0.00233126000000000))*(x84)))+(((IKReal(-1.00000000000000))*(cj3)*(x89)))+(((IKReal(-1.00000000000000))*(x85)*(x93))));
evalcond[3]=((((x82)*(x84)*(x92)))+(((IKReal(-1.00000000000000))*(x82)*(x84)*(x85)))+(((IKReal(-0.135000000000000))*(x98)))+(((IKReal(-1.00000000000000))*(x102)*(x93)))+(((x100)*(x90)))+(((x82)*(x85)*(x93)))+(((IKReal(-1.00000000000000))*(x101)*(x84)*(x86)))+(((x82)*(x97)))+(((x83)*(x86)*(x91)))+(((x83)*(x86)*(x90)))+(((x103)*(x89)))+(((x102)*(x84)))+(((IKReal(-1.00000000000000))*(x106)*(x87)*(x92)))+(((IKReal(-0.155000000000000))*(x83)))+(((IKReal(-1.00000000000000))*(x105)*(x84)))+(((IKReal(-1.00000000000000))*(x103)*(x87)*(x92)))+(((r11)*(x83)*(x84)))+(((x106)*(x89)))+(((x90)*(x99)))+(pz)+(((x83)*(x85)*(x90)))+(((x83)*(x85)*(x91)))+(((IKReal(-1.00000000000000))*(x108)*(x90)*(x92)))+(((x82)*(x86)*(x93)))+(((IKReal(-1.00000000000000))*(r11)*(x87)*(x98)))+(((x104)*(x91)))+(((x104)*(x90)))+(((x91)*(x99))));
evalcond[4]=((IKReal(0.0330000000000000))+(((x110)*(x86)))+(((x110)*(x85)))+(((sj3)*(x82)*(x89)))+(((IKReal(-1.00000000000000))*(x102)*(x91)))+(((IKReal(-1.00000000000000))*(x102)*(x90)))+(((x82)*(x85)*(x90)))+(((IKReal(-1.00000000000000))*(x108)*(x84)*(x92)))+(((IKReal(-1.00000000000000))*(x86)*(x87)*(x98)))+(((x100)*(x84)))+(((IKReal(-1.00000000000000))*(x83)*(x97)))+(((IKReal(-1.00000000000000))*(cj3)*(x87)*(x99)))+(((IKReal(-0.155000000000000))*(x82)))+(x88)+(((IKReal(-1.00000000000000))*(x101)*(x90)*(x92)))+(((IKReal(-1.00000000000000))*(x83)*(x90)*(x95)))+(((x83)*(x92)*(x93)))+(((IKReal(-1.00000000000000))*(x96)))+(((IKReal(-1.00000000000000))*(r11)*(x106)*(x87)))+(((IKReal(-1.00000000000000))*(sj3)*(x82)*(x87)*(x92)))+(((x82)*(x86)*(x90)))+(((x83)*(x84)*(x86)))+(((x83)*(x84)*(x85)))+(((IKReal(-1.00000000000000))*(x83)*(x85)*(x93)))+(((x104)*(x84)))+(((x105)*(x90)))+(((IKReal(-0.135000000000000))*(x103)))+(((IKReal(-1.00000000000000))*(x104)*(x93)))+(((x84)*(x99)))+(((IKReal(-1.00000000000000))*(x89)*(x98))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

{
vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
solution.basesol.resize(5);
solution.basesol[0].foffset = j1;
solution.basesol[0].indices[0] = _ij1[0];
solution.basesol[0].indices[1] = _ij1[1];
solution.basesol[0].maxsolutions = _nj1;
solution.basesol[1].foffset = j2;
solution.basesol[1].indices[0] = _ij2[0];
solution.basesol[1].indices[1] = _ij2[1];
solution.basesol[1].maxsolutions = _nj2;
solution.basesol[2].foffset = j3;
solution.basesol[2].indices[0] = _ij3[0];
solution.basesol[2].indices[1] = _ij3[1];
solution.basesol[2].maxsolutions = _nj3;
solution.basesol[3].foffset = j4;
solution.basesol[3].indices[0] = _ij4[0];
solution.basesol[3].indices[1] = _ij4[1];
solution.basesol[3].maxsolutions = _nj4;
solution.basesol[4].foffset = j5;
solution.basesol[4].indices[0] = _ij5[0];
solution.basesol[4].indices[1] = _ij5[1];
solution.basesol[4].maxsolutions = _nj5;
solution.vfree.resize(0);
}
}
}

}

}
}
}

}

}

} else
{
{
IKReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IKReal x111=((sj4)*(sj5));
IKReal x112=((cj5)*(r22));
IKReal x113=((px)*(sj1));
IKReal x114=((cj1)*(py));
IKReal x115=((IKReal(0.0102300000000000))+(((IKReal(-0.310000000000000))*(x114)))+(((IKReal(0.310000000000000))*(x113))));
if( IKabs(((IKReal(0.310000000000000))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(x115) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x116=((IKReal(1.00000000000000))*(IKatan2(((IKReal(0.310000000000000))*(pz)), x115)));
if( (((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.00466252000000000))*(x112)))+(((IKReal(0.0459000000000000))*(cj4)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.0660000000000000))*(x113)))+((r00)*(r00))+(((IKReal(-0.270000000000000))*(sj4)*(x112)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.000248124600000000))*(x111)))+(((IKReal(0.0660000000000000))*(x114)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.270000000000000))*(r00)*(x111))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.00466252000000000))*(x112)))+(((IKReal(0.0459000000000000))*(cj4)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.0660000000000000))*(x113)))+((r00)*(r00))+(((IKReal(-0.270000000000000))*(sj4)*(x112)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.000248124600000000))*(x111)))+(((IKReal(0.0660000000000000))*(x114)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.270000000000000))*(r00)*(x111))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x117=IKasin(((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x115)*(x115))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.00466252000000000))*(x112)))+(((IKReal(0.0459000000000000))*(cj4)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.0660000000000000))*(x113)))+((r00)*(r00))+(((IKReal(-0.270000000000000))*(sj4)*(x112)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.000248124600000000))*(x111)))+(((IKReal(0.0660000000000000))*(x114)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.270000000000000))*(r00)*(x111)))))));
j2array[0]=((((IKReal(-1.00000000000000))*(x116)))+(((IKReal(-1.00000000000000))*(x117))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IKReal(3.14159265358979))+(((IKReal(-1.00000000000000))*(x116)))+(x117));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IKReal dummyeval[1];
IKReal gconst1;
IKReal x118=(sj4)*(sj4);
IKReal x119=(cj4)*(cj4);
IKReal x120=(r11)*(r11);
IKReal x121=(sj5)*(sj5);
IKReal x122=(r00)*(r00);
IKReal x123=(cj5)*(cj5);
IKReal x124=(r22)*(r22);
IKReal x125=((IKReal(0.00183796000000000))*(r00));
IKReal x126=((IKReal(0.340000000000000))*(r11));
IKReal x127=((cj5)*(r22));
IKReal x128=((sj4)*(sj5));
IKReal x129=((r00)*(sj5));
IKReal x130=((sj5)*(x118));
IKReal x131=((IKReal(0.00466252000000000))*(x119));
IKReal x132=((sj5)*(x119));
IKReal x133=((x119)*(x121));
IKReal x134=((x118)*(x121));
IKReal x135=((x123)*(x124));
gconst1=IKsign(((IKReal(0.0182250000000000))+(((IKReal(-0.000629440200000000))*(sj4)))+(((x127)*(x131)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-2.00000000000000))*(x118)*(x127)*(x129)))+(((IKReal(0.270000000000000))*(r00)*(x128)))+(((IKReal(-2.00000000000000))*(x119)*(x127)*(x129)))+(((IKReal(4.28476262960000e-6))*(x132)))+(((IKReal(4.28476262960000e-6))*(x130)))+(((x122)*(x133)))+(((x122)*(x134)))+(((IKReal(0.00183796000000000))*(x127)*(x132)))+(((IKReal(0.00183796000000000))*(x127)*(x130)))+(((IKReal(-0.000248124600000000))*(x128)))+(((IKReal(-0.00466252000000000))*(x118)*(x129)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-1.00000000000000))*(x125)*(x134)))+(((IKReal(-1.00000000000000))*(x125)*(x133)))+(((IKReal(-0.270000000000000))*(sj4)*(x127)))+(((IKReal(0.00466252000000000))*(x118)*(x127)))+(((IKReal(0.0289054347731876))*(x119)))+(((IKReal(0.0289054347731876))*(x118)))+(((IKReal(8.44524240400000e-7))*(x133)))+(((IKReal(8.44524240400000e-7))*(x134)))+(((IKReal(-1.00000000000000))*(x129)*(x131)))+(((x119)*(x120)))+(((x119)*(x126)))+(((x118)*(x120)))+(((x118)*(x126)))+(((x118)*(x135)))+(((x119)*(x135)))));
IKReal x136=(cj4)*(cj4);
IKReal x137=(sj4)*(sj4);
IKReal x138=(sj5)*(sj5);
IKReal x139=(r00)*(r00);
IKReal x140=(cj5)*(cj5);
IKReal x141=(r22)*(r22);
IKReal x142=(r11)*(r11);
IKReal x143=((IKReal(402593.535786448))*(r11));
IKReal x144=((IKReal(5.07358157957736))*(sj5));
IKReal x145=((sj4)*(sj5));
IKReal x146=((IKReal(2176.32592657076))*(r00));
IKReal x147=((IKReal(2176.32592657076))*(sj5));
IKReal x148=((IKReal(1184098.63466602))*(x139));
IKReal x149=((IKReal(2368197.26933205))*(r00)*(sj5));
IKReal x150=((IKReal(1184098.63466602))*(x142));
IKReal x151=((IKReal(5520.88356610302))*(r00)*(sj5));
IKReal x152=((cj5)*(r22)*(x137));
IKReal x153=((x137)*(x138));
IKReal x154=((x136)*(x138));
IKReal x155=((cj5)*(r22)*(x136));
IKReal x156=((IKReal(1184098.63466602))*(x140)*(x141));
dummyeval[0]=((IKReal(21580.1976167883))+(((IKReal(-1.00000000000000))*(x136)*(x151)))+(((IKReal(34226.8858493592))*(x137)))+(((IKReal(34226.8858493592))*(x136)))+(((IKReal(-1.00000000000000))*(x137)*(x151)))+(((IKReal(319706.631359826))*(r00)*(x145)))+(((IKReal(54350.1273311704))*(cj4)))+(((IKReal(319706.631359826))*(cj4)*(r11)))+(((x137)*(x150)))+(((x137)*(x156)))+(((x136)*(x144)))+(((x136)*(x143)))+(((IKReal(5520.88356610302))*(x155)))+(((IKReal(5520.88356610302))*(x152)))+(((IKReal(-319706.631359826))*(cj5)*(r22)*(sj4)))+(((x137)*(x144)))+(((x137)*(x143)))+(((x136)*(x150)))+(((x136)*(x156)))+(((IKReal(-745.319281423908))*(sj4)))+(x154)+(x153)+(((x147)*(x152)))+(((x147)*(x155)))+(((x148)*(x153)))+(((x148)*(x154)))+(((IKReal(-1.00000000000000))*(x146)*(x153)))+(((IKReal(-1.00000000000000))*(x146)*(x154)))+(((IKReal(-1.00000000000000))*(x149)*(x155)))+(((IKReal(-1.00000000000000))*(x149)*(x152)))+(((IKReal(-293.804000087053))*(x145))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2)))))), ((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IKReal evalcond[5];
IKReal x157=IKsin(j3);
IKReal x158=IKcos(j3);
IKReal x159=((IKReal(0.000284883800000000))*(sj5));
IKReal x160=((IKReal(1.00000000000000))*(r11));
IKReal x161=((IKReal(0.000918980000000000))*(sj5));
IKReal x162=((r11)*(sj2));
IKReal x163=((IKReal(0.170000000000000))*(sj2));
IKReal x164=((IKReal(0.310000000000000))*(r11));
IKReal x165=((IKReal(0.00233126000000000))*(sj2));
IKReal x166=((cj5)*(r22));
IKReal x167=((IKReal(0.00233126000000000))*(cj2));
IKReal x168=((px)*(sj1));
IKReal x169=((IKReal(0.135000000000000))*(cj2));
IKReal x170=((IKReal(0.170000000000000))*(cj2));
IKReal x171=((r00)*(sj5));
IKReal x172=((IKReal(0.270000000000000))*(sj4));
IKReal x173=((sj4)*(x157));
IKReal x174=((sj4)*(x158));
IKReal x175=((cj4)*(x158));
IKReal x176=((IKReal(1.00000000000000))*(x166));
IKReal x177=((cj4)*(x157));
IKReal x178=((IKReal(1.00000000000000))*(x171));
IKReal x179=((IKReal(1.00000000000000))*(cj1)*(py));
IKReal x180=((IKReal(0.135000000000000))*(x157));
IKReal x181=((IKReal(0.135000000000000))*(x158));
evalcond[0]=((IKReal(-0.155000000000000))+(((x161)*(x174)))+(((x161)*(x177)))+(((IKReal(-1.00000000000000))*(x174)*(x178)))+(((IKReal(0.0330000000000000))*(sj2)))+(((IKReal(-1.00000000000000))*(x160)*(x175)))+(((IKReal(-1.00000000000000))*(x181)))+(((IKReal(-1.00000000000000))*(x177)*(x178)))+(((x166)*(x174)))+(((x166)*(x177)))+(((IKReal(0.00233126000000000))*(x174)))+(((IKReal(0.00233126000000000))*(x177)))+(((cj2)*(pz)))+(((IKReal(0.170000000000000))*(x173)))+(((IKReal(-1.00000000000000))*(sj2)*(x179)))+(((r11)*(x173)))+(((IKReal(-0.170000000000000))*(x175)))+(((sj2)*(x168))));
evalcond[1]=((((IKReal(-1.00000000000000))*(x175)*(x176)))+(((x161)*(x173)))+(((IKReal(-1.00000000000000))*(x160)*(x174)))+(((IKReal(-1.00000000000000))*(x160)*(x177)))+(((IKReal(-1.00000000000000))*(x180)))+(((IKReal(-1.00000000000000))*(x161)*(x175)))+(((cj2)*(x168)))+(((x166)*(x173)))+(((IKReal(0.00233126000000000))*(x173)))+(((x171)*(x175)))+(((IKReal(-1.00000000000000))*(pz)*(sj2)))+(((IKReal(-1.00000000000000))*(cj2)*(x179)))+(((IKReal(0.0330000000000000))*(cj2)))+(((IKReal(-1.00000000000000))*(x173)*(x178)))+(((IKReal(-0.170000000000000))*(x177)))+(((IKReal(-0.170000000000000))*(x174)))+(((IKReal(-0.00233126000000000))*(x175))));
evalcond[2]=((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(x168)))+(((IKReal(-1.00000000000000))*(x159)*(x177)))+(((IKReal(-1.00000000000000))*(x159)*(x174)))+(((IKReal(-0.0527000000000000))*(x173)))+((r22)*(r22))+(((IKReal(0.00466252000000000))*(x166)))+(((IKReal(0.0527000000000000))*(x175)))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.000722690600000000))*(x174)))+(((IKReal(-0.000722690600000000))*(x177)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(-0.310000000000000))*(x166)*(x177)))+(((IKReal(-0.310000000000000))*(x166)*(x174)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.310000000000000))*(x171)*(x177)))+(((IKReal(0.310000000000000))*(x171)*(x174)))+(((x164)*(x175)))+(((IKReal(0.0418500000000000))*(x158)))+(((x171)*(x172)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-1.00000000000000))*(x164)*(x173)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(-1.00000000000000))*(x166)*(x172)))+(((IKReal(-0.00466252000000000))*(x171))));
evalcond[3]=((((IKReal(-1.00000000000000))*(sj2)*(x175)*(x178)))+(((sj2)*(x180)))+(((IKReal(-1.00000000000000))*(x158)*(x169)))+(((x162)*(x174)))+(((x162)*(x177)))+(((IKReal(-1.00000000000000))*(sj2)*(x173)*(x176)))+(((IKReal(-1.00000000000000))*(cj2)*(x174)*(x178)))+(((sj2)*(x171)*(x173)))+(((IKReal(-1.00000000000000))*(sj2)*(x161)*(x173)))+(((x167)*(x174)))+(((x167)*(x177)))+(((IKReal(-1.00000000000000))*(x170)*(x175)))+(((cj2)*(x161)*(x177)))+(((cj2)*(x161)*(x174)))+(((IKReal(-1.00000000000000))*(cj2)*(x160)*(x175)))+(pz)+(((x165)*(x175)))+(((x170)*(x173)))+(((IKReal(-0.155000000000000))*(cj2)))+(((sj2)*(x161)*(x175)))+(((cj2)*(r11)*(x173)))+(((cj2)*(x166)*(x177)))+(((cj2)*(x166)*(x174)))+(((x163)*(x177)))+(((x163)*(x174)))+(((IKReal(-1.00000000000000))*(cj2)*(x177)*(x178)))+(((sj2)*(x166)*(x175)))+(((IKReal(-1.00000000000000))*(x165)*(x173))));
evalcond[4]=((IKReal(0.0330000000000000))+(((IKReal(-1.00000000000000))*(x157)*(x169)))+(((IKReal(-1.00000000000000))*(cj2)*(x175)*(x176)))+(((x162)*(x173)))+(((IKReal(-1.00000000000000))*(sj2)*(x174)*(x178)))+(((IKReal(-1.00000000000000))*(x163)*(x175)))+(((IKReal(-1.00000000000000))*(x179)))+(((IKReal(-1.00000000000000))*(sj2)*(x177)*(x178)))+(((IKReal(-1.00000000000000))*(cj2)*(x173)*(x178)))+(((IKReal(-1.00000000000000))*(sj2)*(x160)*(x175)))+(x168)+(((x167)*(x173)))+(((IKReal(-1.00000000000000))*(x170)*(x174)))+(((IKReal(-1.00000000000000))*(x170)*(x177)))+(((cj2)*(x161)*(x173)))+(((IKReal(-1.00000000000000))*(cj2)*(x160)*(x174)))+(((IKReal(-1.00000000000000))*(cj2)*(x160)*(x177)))+(((x165)*(x177)))+(((x165)*(x174)))+(((IKReal(-1.00000000000000))*(sj2)*(x181)))+(((IKReal(-0.155000000000000))*(sj2)))+(((IKReal(-1.00000000000000))*(cj2)*(x161)*(x175)))+(((sj2)*(x161)*(x177)))+(((sj2)*(x161)*(x174)))+(((cj2)*(x166)*(x173)))+(((cj2)*(x171)*(x175)))+(((x163)*(x173)))+(((sj2)*(x166)*(x177)))+(((sj2)*(x166)*(x174)))+(((IKReal(-1.00000000000000))*(x167)*(x175))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

{
vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
solution.basesol.resize(5);
solution.basesol[0].foffset = j1;
solution.basesol[0].indices[0] = _ij1[0];
solution.basesol[0].indices[1] = _ij1[1];
solution.basesol[0].maxsolutions = _nj1;
solution.basesol[1].foffset = j2;
solution.basesol[1].indices[0] = _ij2[0];
solution.basesol[1].indices[1] = _ij2[1];
solution.basesol[1].maxsolutions = _nj2;
solution.basesol[2].foffset = j3;
solution.basesol[2].indices[0] = _ij3[0];
solution.basesol[2].indices[1] = _ij3[1];
solution.basesol[2].maxsolutions = _nj3;
solution.basesol[3].foffset = j4;
solution.basesol[3].indices[0] = _ij4[0];
solution.basesol[3].indices[1] = _ij4[1];
solution.basesol[3].maxsolutions = _nj4;
solution.basesol[4].foffset = j5;
solution.basesol[4].indices[0] = _ij5[0];
solution.basesol[4].indices[1] = _ij5[1];
solution.basesol[4].maxsolutions = _nj5;
solution.vfree.resize(0);
}
}
}

}

}
}
}

}

}

} else
{
{
IKReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IKReal x182=((sj4)*(sj5));
IKReal x183=((cj5)*(r22));
IKReal x184=((px)*(sj1));
IKReal x185=((cj1)*(py));
IKReal x186=((IKReal(0.0102300000000000))+(((IKReal(0.310000000000000))*(x184)))+(((IKReal(-0.310000000000000))*(x185))));
if( IKabs(((IKReal(0.310000000000000))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(x186) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x187=((IKReal(1.00000000000000))*(IKatan2(((IKReal(0.310000000000000))*(pz)), x186)));
if( (((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(-0.000248124600000000))*(x182)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(0.00466252000000000))*(x183)))+(((IKReal(-0.270000000000000))*(sj4)*(x183)))+((r22)*(r22))+((r11)*(r11))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.270000000000000))*(r00)*(x182)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(0.0660000000000000))*(x185)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(-0.0660000000000000))*(x184))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(-0.000248124600000000))*(x182)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(0.00466252000000000))*(x183)))+(((IKReal(-0.270000000000000))*(sj4)*(x183)))+((r22)*(r22))+((r11)*(r11))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.270000000000000))*(r00)*(x182)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(0.0660000000000000))*(x185)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(-0.0660000000000000))*(x184))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x188=IKasin(((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x186)*(x186))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(-0.000248124600000000))*(x182)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(0.00466252000000000))*(x183)))+(((IKReal(-0.270000000000000))*(sj4)*(x183)))+((r22)*(r22))+((r11)*(r11))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.270000000000000))*(r00)*(x182)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(0.0660000000000000))*(x185)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(-0.0660000000000000))*(x184)))))));
j2array[0]=((((IKReal(-1.00000000000000))*(x187)))+(((IKReal(-1.00000000000000))*(x188))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IKReal(3.14159265358979))+(((IKReal(-1.00000000000000))*(x187)))+(x188));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IKReal dummyeval[1];
IKReal gconst1;
IKReal x189=(sj4)*(sj4);
IKReal x190=(cj4)*(cj4);
IKReal x191=(r11)*(r11);
IKReal x192=(sj5)*(sj5);
IKReal x193=(r00)*(r00);
IKReal x194=(cj5)*(cj5);
IKReal x195=(r22)*(r22);
IKReal x196=((IKReal(0.00183796000000000))*(r00));
IKReal x197=((IKReal(0.340000000000000))*(r11));
IKReal x198=((cj5)*(r22));
IKReal x199=((sj4)*(sj5));
IKReal x200=((r00)*(sj5));
IKReal x201=((sj5)*(x189));
IKReal x202=((IKReal(0.00466252000000000))*(x190));
IKReal x203=((sj5)*(x190));
IKReal x204=((x190)*(x192));
IKReal x205=((x189)*(x192));
IKReal x206=((x194)*(x195));
gconst1=IKsign(((IKReal(0.0182250000000000))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0289054347731876))*(x189)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-1.00000000000000))*(x200)*(x202)))+(((IKReal(0.00183796000000000))*(x198)*(x203)))+(((IKReal(0.00183796000000000))*(x198)*(x201)))+(((IKReal(-0.000248124600000000))*(x199)))+(((x198)*(x202)))+(((IKReal(-0.270000000000000))*(sj4)*(x198)))+(((x189)*(x206)))+(((IKReal(-2.00000000000000))*(x190)*(x198)*(x200)))+(((x190)*(x206)))+(((x189)*(x197)))+(((x189)*(x191)))+(((IKReal(8.44524240400000e-7))*(x204)))+(((IKReal(8.44524240400000e-7))*(x205)))+(((IKReal(0.270000000000000))*(r00)*(x199)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.00466252000000000))*(x189)*(x200)))+(((IKReal(-2.00000000000000))*(x189)*(x198)*(x200)))+(((x190)*(x197)))+(((x190)*(x191)))+(((IKReal(4.28476262960000e-6))*(x201)))+(((IKReal(4.28476262960000e-6))*(x203)))+(((IKReal(-1.00000000000000))*(x196)*(x204)))+(((IKReal(-1.00000000000000))*(x196)*(x205)))+(((x193)*(x204)))+(((x193)*(x205)))+(((IKReal(0.00466252000000000))*(x189)*(x198)))+(((IKReal(0.0289054347731876))*(x190)))));
IKReal x207=(cj4)*(cj4);
IKReal x208=(sj4)*(sj4);
IKReal x209=(sj5)*(sj5);
IKReal x210=(r00)*(r00);
IKReal x211=(cj5)*(cj5);
IKReal x212=(r22)*(r22);
IKReal x213=(r11)*(r11);
IKReal x214=((IKReal(402593.535786448))*(r11));
IKReal x215=((IKReal(5.07358157957736))*(sj5));
IKReal x216=((sj4)*(sj5));
IKReal x217=((IKReal(2176.32592657076))*(r00));
IKReal x218=((IKReal(2176.32592657076))*(sj5));
IKReal x219=((IKReal(1184098.63466602))*(x210));
IKReal x220=((IKReal(2368197.26933205))*(r00)*(sj5));
IKReal x221=((IKReal(1184098.63466602))*(x213));
IKReal x222=((IKReal(5520.88356610302))*(r00)*(sj5));
IKReal x223=((cj5)*(r22)*(x208));
IKReal x224=((x208)*(x209));
IKReal x225=((x207)*(x209));
IKReal x226=((cj5)*(r22)*(x207));
IKReal x227=((IKReal(1184098.63466602))*(x211)*(x212));
dummyeval[0]=((IKReal(21580.1976167883))+(((IKReal(34226.8858493592))*(x207)))+(((IKReal(34226.8858493592))*(x208)))+(((x207)*(x221)))+(((x207)*(x227)))+(((IKReal(54350.1273311704))*(cj4)))+(((IKReal(-1.00000000000000))*(x207)*(x222)))+(((IKReal(319706.631359826))*(cj4)*(r11)))+(((x208)*(x221)))+(((x208)*(x227)))+(((IKReal(-319706.631359826))*(cj5)*(r22)*(sj4)))+(((x208)*(x215)))+(((x208)*(x214)))+(((x207)*(x214)))+(((x207)*(x215)))+(((IKReal(-745.319281423908))*(sj4)))+(((IKReal(-1.00000000000000))*(x208)*(x222)))+(((x219)*(x225)))+(((x219)*(x224)))+(x225)+(x224)+(((IKReal(-1.00000000000000))*(x220)*(x226)))+(((IKReal(-1.00000000000000))*(x220)*(x223)))+(((x218)*(x223)))+(((x218)*(x226)))+(((IKReal(-1.00000000000000))*(x217)*(x224)))+(((IKReal(-1.00000000000000))*(x217)*(x225)))+(((IKReal(319706.631359826))*(r00)*(x216)))+(((IKReal(-293.804000087053))*(x216)))+(((IKReal(5520.88356610302))*(x223)))+(((IKReal(5520.88356610302))*(x226))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2)))))), ((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IKReal evalcond[5];
IKReal x228=IKsin(j3);
IKReal x229=IKcos(j3);
IKReal x230=((IKReal(0.000284883800000000))*(sj5));
IKReal x231=((IKReal(1.00000000000000))*(r11));
IKReal x232=((IKReal(0.000918980000000000))*(sj5));
IKReal x233=((r11)*(sj2));
IKReal x234=((IKReal(0.170000000000000))*(sj2));
IKReal x235=((IKReal(0.310000000000000))*(r11));
IKReal x236=((IKReal(0.00233126000000000))*(sj2));
IKReal x237=((cj5)*(r22));
IKReal x238=((IKReal(0.00233126000000000))*(cj2));
IKReal x239=((px)*(sj1));
IKReal x240=((IKReal(0.135000000000000))*(cj2));
IKReal x241=((IKReal(0.170000000000000))*(cj2));
IKReal x242=((r00)*(sj5));
IKReal x243=((IKReal(0.270000000000000))*(sj4));
IKReal x244=((sj4)*(x228));
IKReal x245=((sj4)*(x229));
IKReal x246=((cj4)*(x229));
IKReal x247=((IKReal(1.00000000000000))*(x237));
IKReal x248=((cj4)*(x228));
IKReal x249=((IKReal(1.00000000000000))*(x242));
IKReal x250=((IKReal(1.00000000000000))*(cj1)*(py));
IKReal x251=((IKReal(0.135000000000000))*(x228));
IKReal x252=((IKReal(0.135000000000000))*(x229));
evalcond[0]=((IKReal(-0.155000000000000))+(((sj2)*(x239)))+(((IKReal(-1.00000000000000))*(x248)*(x249)))+(((IKReal(0.0330000000000000))*(sj2)))+(((IKReal(-1.00000000000000))*(x231)*(x246)))+(((x237)*(x248)))+(((x237)*(x245)))+(((IKReal(0.00233126000000000))*(x245)))+(((IKReal(0.00233126000000000))*(x248)))+(((IKReal(-1.00000000000000))*(sj2)*(x250)))+(((x232)*(x248)))+(((x232)*(x245)))+(((cj2)*(pz)))+(((IKReal(-1.00000000000000))*(x245)*(x249)))+(((r11)*(x244)))+(((IKReal(-0.170000000000000))*(x246)))+(((IKReal(-1.00000000000000))*(x252)))+(((IKReal(0.170000000000000))*(x244))));
evalcond[1]=((((cj2)*(x239)))+(((IKReal(-1.00000000000000))*(x231)*(x245)))+(((IKReal(-1.00000000000000))*(x231)*(x248)))+(((x237)*(x244)))+(((IKReal(-1.00000000000000))*(x232)*(x246)))+(((IKReal(0.00233126000000000))*(x244)))+(((IKReal(-0.00233126000000000))*(x246)))+(((x232)*(x244)))+(((IKReal(-1.00000000000000))*(pz)*(sj2)))+(((x242)*(x246)))+(((IKReal(0.0330000000000000))*(cj2)))+(((IKReal(-1.00000000000000))*(cj2)*(x250)))+(((IKReal(-1.00000000000000))*(x246)*(x247)))+(((IKReal(-0.170000000000000))*(x245)))+(((IKReal(-0.170000000000000))*(x248)))+(((IKReal(-1.00000000000000))*(x244)*(x249)))+(((IKReal(-1.00000000000000))*(x251))));
evalcond[2]=((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.000722690600000000))*(x248)))+(((IKReal(-0.000722690600000000))*(x245)))+(((IKReal(0.0527000000000000))*(x246)))+(((IKReal(-0.310000000000000))*(x237)*(x248)))+(((IKReal(-0.310000000000000))*(x237)*(x245)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(0.0418500000000000))*(x229)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(x237)*(x243)))+(((IKReal(-1.00000000000000))*(x230)*(x245)))+(((IKReal(-1.00000000000000))*(x230)*(x248)))+(((IKReal(-0.0527000000000000))*(x244)))+((r00)*(r00))+(((IKReal(-0.0660000000000000))*(x239)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.00466252000000000))*(x242)))+(((IKReal(-1.00000000000000))*(x235)*(x244)))+(((IKReal(0.340000000000000))*(r11)))+(((x242)*(x243)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(0.00466252000000000))*(x237)))+(((IKReal(0.310000000000000))*(x242)*(x245)))+(((IKReal(0.310000000000000))*(x242)*(x248)))+(((IKReal(-0.00183796000000000))*(r00)))+(((x235)*(x246))));
evalcond[3]=((((IKReal(-1.00000000000000))*(sj2)*(x246)*(x249)))+(((IKReal(-1.00000000000000))*(sj2)*(x232)*(x244)))+(((cj2)*(r11)*(x244)))+(((cj2)*(x237)*(x248)))+(((cj2)*(x237)*(x245)))+(((x233)*(x248)))+(((x233)*(x245)))+(((IKReal(-1.00000000000000))*(x229)*(x240)))+(((IKReal(-1.00000000000000))*(cj2)*(x245)*(x249)))+(((x234)*(x245)))+(((x234)*(x248)))+(((x238)*(x245)))+(((x238)*(x248)))+(((sj2)*(x237)*(x246)))+(((x236)*(x246)))+(((IKReal(-1.00000000000000))*(x236)*(x244)))+(((cj2)*(x232)*(x245)))+(((cj2)*(x232)*(x248)))+(((sj2)*(x242)*(x244)))+(((IKReal(-1.00000000000000))*(x241)*(x246)))+(((IKReal(-1.00000000000000))*(sj2)*(x244)*(x247)))+(((sj2)*(x251)))+(pz)+(((x241)*(x244)))+(((IKReal(-0.155000000000000))*(cj2)))+(((IKReal(-1.00000000000000))*(cj2)*(x248)*(x249)))+(((sj2)*(x232)*(x246)))+(((IKReal(-1.00000000000000))*(cj2)*(x231)*(x246))));
evalcond[4]=((IKReal(0.0330000000000000))+(((IKReal(-1.00000000000000))*(x228)*(x240)))+(((cj2)*(x237)*(x244)))+(((x233)*(x244)))+(((x234)*(x244)))+(((x238)*(x244)))+(((sj2)*(x237)*(x248)))+(((sj2)*(x237)*(x245)))+(((x236)*(x245)))+(((x236)*(x248)))+(((IKReal(-1.00000000000000))*(sj2)*(x245)*(x249)))+(((IKReal(-1.00000000000000))*(x234)*(x246)))+(((IKReal(-1.00000000000000))*(cj2)*(x244)*(x249)))+(((cj2)*(x232)*(x244)))+(((IKReal(-1.00000000000000))*(cj2)*(x232)*(x246)))+(((IKReal(-1.00000000000000))*(x241)*(x248)))+(((IKReal(-1.00000000000000))*(x241)*(x245)))+(x239)+(((IKReal(-1.00000000000000))*(sj2)*(x231)*(x246)))+(((IKReal(-1.00000000000000))*(sj2)*(x252)))+(((IKReal(-1.00000000000000))*(x238)*(x246)))+(((IKReal(-1.00000000000000))*(cj2)*(x246)*(x247)))+(((IKReal(-0.155000000000000))*(sj2)))+(((sj2)*(x232)*(x245)))+(((sj2)*(x232)*(x248)))+(((IKReal(-1.00000000000000))*(sj2)*(x248)*(x249)))+(((cj2)*(x242)*(x246)))+(((IKReal(-1.00000000000000))*(cj2)*(x231)*(x245)))+(((IKReal(-1.00000000000000))*(cj2)*(x231)*(x248)))+(((IKReal(-1.00000000000000))*(x250))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

{
vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
solution.basesol.resize(5);
solution.basesol[0].foffset = j1;
solution.basesol[0].indices[0] = _ij1[0];
solution.basesol[0].indices[1] = _ij1[1];
solution.basesol[0].maxsolutions = _nj1;
solution.basesol[1].foffset = j2;
solution.basesol[1].indices[0] = _ij2[0];
solution.basesol[1].indices[1] = _ij2[1];
solution.basesol[1].maxsolutions = _nj2;
solution.basesol[2].foffset = j3;
solution.basesol[2].indices[0] = _ij3[0];
solution.basesol[2].indices[1] = _ij3[1];
solution.basesol[2].maxsolutions = _nj3;
solution.basesol[3].foffset = j4;
solution.basesol[3].indices[0] = _ij4[0];
solution.basesol[3].indices[1] = _ij4[1];
solution.basesol[3].maxsolutions = _nj4;
solution.basesol[4].foffset = j5;
solution.basesol[4].indices[0] = _ij5[0];
solution.basesol[4].indices[1] = _ij5[1];
solution.basesol[4].maxsolutions = _nj5;
solution.vfree.resize(0);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IKReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( IKabs(((IKReal(-1.00000000000000))*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IKReal(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x253=((IKReal(1.00000000000000))*(IKatan2(((IKReal(-1.00000000000000))*(px)), ((IKReal(-1.00000000000000))*(py)))));
if( ((((px)*(px))+((py)*(py)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IKReal)1.0e30))*(((((IKReal(-0.000918980000000000))*(cj5)))+(((r22)*(sj5)))+(((cj5)*(r00))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IKReal)1.0e30))*(((((IKReal(-0.000918980000000000))*(cj5)))+(((r22)*(sj5)))+(((cj5)*(r00))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x254=IKasin(((((IKabs(IKabs(IKsqrt((((px)*(px))+((py)*(py)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((px)*(px))+((py)*(py))))))):(IKReal)1.0e30))*(((((IKReal(-0.000918980000000000))*(cj5)))+(((r22)*(sj5)))+(((cj5)*(r00)))))));
j1array[0]=((((IKReal(-1.00000000000000))*(x254)))+(((IKReal(-1.00000000000000))*(x253))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=((IKReal(3.14159265358979))+(x254)+(((IKReal(-1.00000000000000))*(x253))));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
for(int ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

{
IKReal dummyeval[1];
IKReal x255=((px)*(sj1));
IKReal x256=((cj1)*(py));
dummyeval[0]=((IKReal(1.00000000000000))+(((IKReal(-60.6060606060606))*(x256)))+(((IKReal(918.273645546373))*((pz)*(pz))))+(((IKReal(60.6060606060606))*(x255)))+(((IKReal(-1836.54729109275))*(x255)*(x256)))+(((IKReal(918.273645546373))*((x255)*(x255))))+(((IKReal(918.273645546373))*((x256)*(x256)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IKReal dummyeval[1];
IKReal x257=((px)*(sj1));
IKReal x258=((cj1)*(py));
dummyeval[0]=((IKReal(1.00000000000000))+(((IKReal(-60.6060606060606))*(x258)))+(((IKReal(-1836.54729109275))*(x257)*(x258)))+(((IKReal(918.273645546373))*((pz)*(pz))))+(((IKReal(60.6060606060606))*(x257)))+(((IKReal(918.273645546373))*((x258)*(x258))))+(((IKReal(918.273645546373))*((x257)*(x257)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IKReal dummyeval[1];
IKReal x259=(cj4)*(cj4);
IKReal x260=(sj4)*(sj4);
IKReal x261=(sj5)*(sj5);
IKReal x262=(r00)*(r00);
IKReal x263=(cj5)*(cj5);
IKReal x264=(r22)*(r22);
IKReal x265=(r11)*(r11);
IKReal x266=((IKReal(402593.535786448))*(r11));
IKReal x267=((IKReal(5.07358157957736))*(sj5));
IKReal x268=((sj4)*(sj5));
IKReal x269=((IKReal(2176.32592657076))*(r00));
IKReal x270=((IKReal(2176.32592657076))*(sj5));
IKReal x271=((IKReal(1184098.63466602))*(x262));
IKReal x272=((IKReal(2368197.26933205))*(r00)*(sj5));
IKReal x273=((IKReal(1184098.63466602))*(x265));
IKReal x274=((IKReal(5520.88356610302))*(r00)*(sj5));
IKReal x275=((cj5)*(r22)*(x260));
IKReal x276=((x260)*(x261));
IKReal x277=((x259)*(x261));
IKReal x278=((cj5)*(r22)*(x259));
IKReal x279=((IKReal(1184098.63466602))*(x263)*(x264));
dummyeval[0]=((IKReal(21580.1976167883))+(((IKReal(-1.00000000000000))*(x272)*(x278)))+(((IKReal(-1.00000000000000))*(x272)*(x275)))+(((x271)*(x277)))+(((x271)*(x276)))+(((IKReal(54350.1273311704))*(cj4)))+(((IKReal(319706.631359826))*(cj4)*(r11)))+(((IKReal(319706.631359826))*(r00)*(x268)))+(((x259)*(x273)))+(((x259)*(x279)))+(((IKReal(-1.00000000000000))*(x259)*(x274)))+(((x259)*(x266)))+(((x259)*(x267)))+(((x260)*(x266)))+(((x260)*(x267)))+(((IKReal(-319706.631359826))*(cj5)*(r22)*(sj4)))+(((x260)*(x279)))+(((x260)*(x273)))+(((IKReal(5520.88356610302))*(x275)))+(((IKReal(5520.88356610302))*(x278)))+(((IKReal(-745.319281423908))*(sj4)))+(((IKReal(-1.00000000000000))*(x269)*(x277)))+(((IKReal(-1.00000000000000))*(x269)*(x276)))+(((x270)*(x278)))+(((x270)*(x275)))+(x276)+(x277)+(((IKReal(34226.8858493592))*(x259)))+(((IKReal(-293.804000087053))*(x268)))+(((IKReal(-1.00000000000000))*(x260)*(x274)))+(((IKReal(34226.8858493592))*(x260))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
IKReal x280=((IKReal(0.310000000000000))*(cj4));
IKReal x281=((cj5)*(r22));
IKReal x282=((IKReal(0.000284883800000000))*(sj5));
IKReal x283=((IKReal(0.310000000000000))*(sj4));
IKReal x284=((r00)*(sj5));
IKReal x285=((sj4)*(x284));
IKReal x286=((((IKReal(-0.000722690600000000))*(cj4)))+(((IKReal(-1.00000000000000))*(x280)*(x281)))+(((IKReal(-1.00000000000000))*(r11)*(x283)))+(((IKReal(-1.00000000000000))*(cj4)*(x282)))+(((x280)*(x284)))+(((IKReal(-0.0527000000000000))*(sj4))));
IKReal x287=((IKReal(0.0418500000000000))+(((IKReal(0.0527000000000000))*(cj4)))+(((IKReal(-1.00000000000000))*(sj4)*(x282)))+(((r11)*(x280)))+(((IKReal(-0.000722690600000000))*(sj4)))+(((IKReal(-1.00000000000000))*(x281)*(x283)))+(((x283)*(x284))));
if( IKabs(x287) < IKFAST_ATAN2_MAGTHRESH && IKabs(x286) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x288=((IKReal(1.00000000000000))*(IKatan2(x287, x286)));
if( ((((x287)*(x287))+((x286)*(x286)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((x287)*(x287))+((x286)*(x286)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((x287)*(x287))+((x286)*(x286))))))):(IKReal)1.0e30))*(((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(px)*(sj1)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.00466252000000000))*(x281)))+(((IKReal(0.270000000000000))*(x285)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.00466252000000000))*(x284)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.270000000000000))*(sj4)*(x281)))+(((IKReal(-0.00183796000000000))*(r00))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((x287)*(x287))+((x286)*(x286)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((x287)*(x287))+((x286)*(x286))))))):(IKReal)1.0e30))*(((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(px)*(sj1)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.00466252000000000))*(x281)))+(((IKReal(0.270000000000000))*(x285)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.00466252000000000))*(x284)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.270000000000000))*(sj4)*(x281)))+(((IKReal(-0.00183796000000000))*(r00))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x289=IKasin(((((IKabs(IKabs(IKsqrt((((x287)*(x287))+((x286)*(x286)))))) != 0)?((IKReal)1/(IKabs(IKsqrt((((x287)*(x287))+((x286)*(x286))))))):(IKReal)1.0e30))*(((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.0660000000000000))*(px)*(sj1)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.00466252000000000))*(x281)))+(((IKReal(0.270000000000000))*(x285)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.00466252000000000))*(x284)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.270000000000000))*(sj4)*(x281)))+(((IKReal(-0.00183796000000000))*(r00)))))));
j3array[0]=((((IKReal(-1.00000000000000))*(x289)))+(((IKReal(-1.00000000000000))*(x288))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=((IKReal(3.14159265358979))+(x289)+(((IKReal(-1.00000000000000))*(x288))));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IKReal dummyeval[1];
IKReal gconst0;
IKReal x290=((px)*(sj1));
IKReal x291=((cj1)*(py));
gconst0=IKsign(((IKReal(0.00108900000000000))+(((IKReal(-2.00000000000000))*(x290)*(x291)))+((pz)*(pz))+((x291)*(x291))+((x290)*(x290))+(((IKReal(0.0660000000000000))*(x290)))+(((IKReal(-0.0660000000000000))*(x291)))));
IKReal x292=((px)*(sj1));
IKReal x293=((cj1)*(py));
dummyeval[0]=((IKReal(1.00000000000000))+(((IKReal(-1836.54729109275))*(x292)*(x293)))+(((IKReal(60.6060606060606))*(x292)))+(((IKReal(918.273645546373))*((pz)*(pz))))+(((IKReal(918.273645546373))*((x292)*(x292))))+(((IKReal(918.273645546373))*((x293)*(x293))))+(((IKReal(-60.6060606060606))*(x293))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((gconst0)*(((IKReal(0.00511500000000000))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj3)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(-0.135000000000000))*(cj1)*(cj3)*(py)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(0.00445500000000000))*(cj3)))+(((cj1)*(py)*(r11)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(pz)*(r11)*(sj4)))+(((IKReal(0.00233126000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(0.135000000000000))*(cj3)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(cj5)*(pz)*(r22)))+(((cj4)*(px)*(r00)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj3)*(py)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(-0.000918980000000000))*(cj3)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r00)*(sj4)*(sj5)))+(((cj3)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(px)*(sj1)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.00561000000000000))*(cj3)*(cj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj3)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj3)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj3)*(sj4)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj3)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj3)*(sj5)))+(((cj1)*(cj3)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj3)*(sj4)))+(((IKReal(-0.135000000000000))*(pz)*(sj3)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((cj5)*(pz)*(r22)*(sj3)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(py)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj3)*(sj5)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj5)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj3)))+(((cj3)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(cj4)*(pz)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj3)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(-0.00233126000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj3)*(sj5)))+(((cj3)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-0.155000000000000))*(cj1)*(py)))+(((IKReal(-7.69315800000000e-5))*(cj3)*(sj4)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IKReal(-3.03263400000000e-5))*(sj3)*(sj4)*(sj5)))+(((cj4)*(pz)*(r00)*(sj3)*(sj5)))+(((IKReal(0.135000000000000))*(cj3)*(pz)))+(((IKReal(0.170000000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(pz)*(sj4)*(sj5)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.00445500000000000))*(sj3)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((cj3)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((cj3)*(cj4)*(pz)*(r11)))+(((cj1)*(cj5)*(py)*(r22)*(sj3)*(sj4)))+(((cj3)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(cj5)*(r22)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj3)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(0.0330000000000000))*(cj3)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj4)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj3)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj3)))+(((IKReal(-7.69315800000000e-5))*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(pz)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(cj5)*(py)*(r22)))+(((cj1)*(cj3)*(cj4)*(py)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj3)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj3)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj3)))+(((IKReal(0.00233126000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((cj3)*(px)*(r11)*(sj1)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj3)*(cj4)*(py)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj3)*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj3)*(sj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj3)))+(((IKReal(0.000918980000000000))*(cj3)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(7.69315800000000e-5))*(cj3)*(cj4)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj3)))+(((IKReal(3.03263400000000e-5))*(cj3)*(cj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj3)*(pz)*(sj4)))+(((px)*(r00)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(px)*(r00)*(sj1)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((IKReal(0.00511500000000000))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj3)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(-0.135000000000000))*(cj1)*(cj3)*(py)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(0.00445500000000000))*(cj3)))+(((cj1)*(py)*(r11)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(pz)*(r11)*(sj4)))+(((IKReal(0.00233126000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(0.135000000000000))*(cj3)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(cj5)*(pz)*(r22)))+(((cj4)*(px)*(r00)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj3)*(py)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(-0.000918980000000000))*(cj3)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r00)*(sj4)*(sj5)))+(((cj3)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(px)*(sj1)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj3)*(sj5)))+(((IKReal(0.00561000000000000))*(cj3)*(cj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj3)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj3)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj3)*(sj4)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj3)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj3)*(sj5)))+(((cj1)*(cj3)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj3)*(sj4)))+(((IKReal(-0.135000000000000))*(pz)*(sj3)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((cj5)*(pz)*(r22)*(sj3)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(py)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj3)*(sj5)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj5)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj3)))+(((cj3)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(cj4)*(pz)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(cj3)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(-0.00233126000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj3)*(sj5)))+(((cj3)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-0.155000000000000))*(cj1)*(py)))+(((IKReal(-7.69315800000000e-5))*(cj3)*(sj4)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj3)))))), ((gconst0)*(((((IKReal(-3.03263400000000e-5))*(sj3)*(sj4)*(sj5)))+(((cj4)*(pz)*(r00)*(sj3)*(sj5)))+(((IKReal(0.135000000000000))*(cj3)*(pz)))+(((IKReal(0.170000000000000))*(cj3)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj3)*(pz)*(sj4)*(sj5)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.00445500000000000))*(sj3)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj3)*(sj4)))+(((cj3)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((cj3)*(cj4)*(pz)*(r11)))+(((cj1)*(cj5)*(py)*(r22)*(sj3)*(sj4)))+(((cj3)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj3)*(cj4)*(cj5)*(r22)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj3)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj3)*(cj4)*(py)))+(((IKReal(0.0330000000000000))*(cj3)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj4)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj3)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj3)))+(((IKReal(-7.69315800000000e-5))*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj3)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(pz)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(cj4)*(cj5)*(py)*(r22)))+(((cj1)*(cj3)*(cj4)*(py)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj3)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj3)))+(((IKReal(-0.0330000000000000))*(cj3)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.170000000000000))*(cj1)*(cj3)*(py)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj3)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj3)))+(((IKReal(0.00233126000000000))*(cj3)*(cj4)*(px)*(sj1)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj3)))+(((cj3)*(px)*(r11)*(sj1)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj3)*(cj4)*(py)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj3)*(sj4)))+(((IKReal(-1.00000000000000))*(cj3)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj3)*(py)*(r11)*(sj4)))+(((IKReal(0.00561000000000000))*(cj3)*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj3)*(sj4)))+(((IKReal(0.170000000000000))*(cj3)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj3)))+(((IKReal(0.000918980000000000))*(cj3)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(7.69315800000000e-5))*(cj3)*(cj4)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj3)))+(((IKReal(3.03263400000000e-5))*(cj3)*(cj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj3)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj3)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj3)*(pz)*(sj4)))+(((px)*(r00)*(sj1)*(sj3)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj3)*(cj4)*(px)*(r00)*(sj1)*(sj5)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IKReal evalcond[5];
IKReal x294=IKsin(j2);
IKReal x295=IKcos(j2);
IKReal x296=((sj3)*(sj4));
IKReal x297=((IKReal(0.000918980000000000))*(sj5));
IKReal x298=((cj5)*(r22));
IKReal x299=((IKReal(1.00000000000000))*(cj4));
IKReal x300=((px)*(sj1));
IKReal x301=((IKReal(0.00233126000000000))*(cj4));
IKReal x302=((cj3)*(sj4));
IKReal x303=((cj4)*(sj3));
IKReal x304=((r00)*(sj5));
IKReal x305=((cj3)*(cj4));
IKReal x306=((IKReal(0.270000000000000))*(sj4));
IKReal x307=((IKReal(1.00000000000000))*(r11));
IKReal x308=((cj1)*(py));
IKReal x309=((IKReal(0.135000000000000))*(sj3));
IKReal x310=((cj3)*(x295));
IKReal x311=((r11)*(x294));
IKReal x312=((IKReal(0.00233126000000000))*(x295));
IKReal x313=((IKReal(1.00000000000000))*(x294));
IKReal x314=((IKReal(0.170000000000000))*(x295));
IKReal x315=((cj3)*(x294));
IKReal x316=((IKReal(0.170000000000000))*(x294));
IKReal x317=((IKReal(0.00233126000000000))*(x294));
IKReal x318=((sj3)*(x295));
IKReal x319=((IKReal(0.310000000000000))*(x294));
IKReal x320=((IKReal(1.00000000000000))*(x295));
IKReal x321=((pz)*(x295));
IKReal x322=((x294)*(x303));
evalcond[0]=((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-1.00000000000000))*(x298)*(x306)))+(((x300)*(x319)))+((r22)*(r22))+(((IKReal(0.0102300000000000))*(x294)))+((r11)*(r11))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(-0.00466252000000000))*(x304)))+(((IKReal(-1.00000000000000))*(x308)*(x319)))+(((IKReal(-0.0660000000000000))*(x300)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.0660000000000000))*(x308)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(0.310000000000000))*(x321)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((x304)*(x306)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x298))));
evalcond[1]=((IKReal(-0.155000000000000))+(((IKReal(-1.00000000000000))*(sj3)*(x299)*(x304)))+(((IKReal(-0.170000000000000))*(x305)))+(((IKReal(-0.135000000000000))*(cj3)))+(((IKReal(-1.00000000000000))*(x302)*(x304)))+(((IKReal(0.170000000000000))*(x296)))+(((IKReal(0.00233126000000000))*(x302)))+(((sj3)*(x301)))+(((IKReal(-1.00000000000000))*(x308)*(x313)))+(((x294)*(x300)))+(x321)+(((x298)*(x302)))+(((x298)*(x303)))+(((x297)*(x303)))+(((x297)*(x302)))+(((IKReal(0.0330000000000000))*(x294)))+(((IKReal(-1.00000000000000))*(cj3)*(r11)*(x299)))+(((r11)*(x296))));
evalcond[2]=((((IKReal(-1.00000000000000))*(x296)*(x304)))+(((IKReal(-0.170000000000000))*(x303)))+(((IKReal(-0.170000000000000))*(x302)))+(((IKReal(-1.00000000000000))*(cj3)*(x301)))+(((IKReal(-1.00000000000000))*(r11)*(sj3)*(x299)))+(((IKReal(-1.00000000000000))*(x297)*(x305)))+(((IKReal(-1.00000000000000))*(x302)*(x307)))+(((x295)*(x300)))+(((IKReal(-1.00000000000000))*(cj3)*(x298)*(x299)))+(((IKReal(-1.00000000000000))*(pz)*(x313)))+(((IKReal(0.0330000000000000))*(x295)))+(((x296)*(x297)))+(((x296)*(x298)))+(((IKReal(-1.00000000000000))*(x308)*(x320)))+(((x304)*(x305)))+(((IKReal(0.00233126000000000))*(x296)))+(((IKReal(-1.00000000000000))*(x309))));
evalcond[3]=((((IKReal(-1.00000000000000))*(x302)*(x304)*(x320)))+(((x295)*(x298)*(x302)))+(((x295)*(x298)*(x303)))+(((x302)*(x311)))+(((x302)*(x316)))+(((x302)*(x312)))+(((IKReal(-0.155000000000000))*(x295)))+(((x294)*(x298)*(x305)))+(((x295)*(x297)*(x303)))+(((x295)*(x297)*(x302)))+(((x296)*(x314)))+(((x301)*(x315)))+(((x301)*(x318)))+(((x294)*(x296)*(x304)))+(((x294)*(x309)))+(((IKReal(-1.00000000000000))*(x305)*(x314)))+(((IKReal(-1.00000000000000))*(x294)*(x296)*(x297)))+(((IKReal(-1.00000000000000))*(x296)*(x298)*(x313)))+(pz)+(((x294)*(x297)*(x305)))+(((IKReal(-1.00000000000000))*(r11)*(x299)*(x310)))+(((x303)*(x311)))+(((x303)*(x316)))+(((IKReal(-0.135000000000000))*(x310)))+(((IKReal(-1.00000000000000))*(x299)*(x304)*(x318)))+(((IKReal(-1.00000000000000))*(x299)*(x304)*(x315)))+(((r11)*(x295)*(x296)))+(((IKReal(-1.00000000000000))*(x296)*(x317))));
evalcond[4]=((IKReal(0.0330000000000000))+(((x302)*(x317)))+(((IKReal(-1.00000000000000))*(cj3)*(x299)*(x311)))+(((IKReal(-1.00000000000000))*(x295)*(x297)*(x305)))+(((IKReal(-0.155000000000000))*(x294)))+(((x294)*(x298)*(x302)))+(((IKReal(-1.00000000000000))*(x298)*(x299)*(x310)))+(((IKReal(-1.00000000000000))*(x296)*(x304)*(x320)))+(((x295)*(x296)*(x298)))+(((x295)*(x296)*(x297)))+(((IKReal(-1.00000000000000))*(x303)*(x314)))+(((x296)*(x312)))+(((x296)*(x311)))+(((x296)*(x316)))+(((IKReal(-1.00000000000000))*(sj3)*(x294)*(x299)*(x304)))+(((IKReal(-1.00000000000000))*(x302)*(x314)))+(((IKReal(-1.00000000000000))*(x302)*(x304)*(x313)))+(((IKReal(-1.00000000000000))*(x308)))+(((IKReal(-1.00000000000000))*(x295)*(x309)))+(x300)+(((IKReal(-1.00000000000000))*(x305)*(x316)))+(((x294)*(x297)*(x302)))+(((x297)*(x322)))+(((x298)*(x322)))+(((IKReal(-1.00000000000000))*(r11)*(x299)*(x318)))+(((IKReal(-1.00000000000000))*(x295)*(x302)*(x307)))+(((IKReal(-0.135000000000000))*(x315)))+(((sj3)*(x294)*(x301)))+(((IKReal(-1.00000000000000))*(x301)*(x310)))+(((x295)*(x304)*(x305))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

{
vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
solution.basesol.resize(5);
solution.basesol[0].foffset = j1;
solution.basesol[0].indices[0] = _ij1[0];
solution.basesol[0].indices[1] = _ij1[1];
solution.basesol[0].maxsolutions = _nj1;
solution.basesol[1].foffset = j2;
solution.basesol[1].indices[0] = _ij2[0];
solution.basesol[1].indices[1] = _ij2[1];
solution.basesol[1].maxsolutions = _nj2;
solution.basesol[2].foffset = j3;
solution.basesol[2].indices[0] = _ij3[0];
solution.basesol[2].indices[1] = _ij3[1];
solution.basesol[2].maxsolutions = _nj3;
solution.basesol[3].foffset = j4;
solution.basesol[3].indices[0] = _ij4[0];
solution.basesol[3].indices[1] = _ij4[1];
solution.basesol[3].maxsolutions = _nj4;
solution.basesol[4].foffset = j5;
solution.basesol[4].indices[0] = _ij5[0];
solution.basesol[4].indices[1] = _ij5[1];
solution.basesol[4].maxsolutions = _nj5;
solution.vfree.resize(0);
}
}
}

}

}
}
}

}

}

} else
{
{
IKReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IKReal x323=((sj4)*(sj5));
IKReal x324=((cj5)*(r22));
IKReal x325=((px)*(sj1));
IKReal x326=((cj1)*(py));
IKReal x327=((IKReal(0.0102300000000000))+(((IKReal(-0.310000000000000))*(x326)))+(((IKReal(0.310000000000000))*(x325))));
if( IKabs(((IKReal(0.310000000000000))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(x327) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x328=((IKReal(1.00000000000000))*(IKatan2(((IKReal(0.310000000000000))*(pz)), x327)));
if( (((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.270000000000000))*(sj4)*(x324)))+(((IKReal(0.0660000000000000))*(x326)))+(((IKReal(0.00466252000000000))*(x324)))+((r00)*(r00))+(((IKReal(-0.0660000000000000))*(x325)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.000248124600000000))*(x323)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.270000000000000))*(r00)*(x323))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.270000000000000))*(sj4)*(x324)))+(((IKReal(0.0660000000000000))*(x326)))+(((IKReal(0.00466252000000000))*(x324)))+((r00)*(r00))+(((IKReal(-0.0660000000000000))*(x325)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.000248124600000000))*(x323)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.270000000000000))*(r00)*(x323))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x329=IKasin(((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x327)*(x327))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(-0.270000000000000))*(sj4)*(x324)))+(((IKReal(0.0660000000000000))*(x326)))+(((IKReal(0.00466252000000000))*(x324)))+((r00)*(r00))+(((IKReal(-0.0660000000000000))*(x325)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.000248124600000000))*(x323)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.270000000000000))*(r00)*(x323)))))));
j2array[0]=((((IKReal(-1.00000000000000))*(x328)))+(((IKReal(-1.00000000000000))*(x329))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IKReal(3.14159265358979))+(((IKReal(-1.00000000000000))*(x328)))+(x329));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IKReal dummyeval[1];
IKReal gconst1;
IKReal x330=(sj4)*(sj4);
IKReal x331=(cj4)*(cj4);
IKReal x332=(r11)*(r11);
IKReal x333=(sj5)*(sj5);
IKReal x334=(r00)*(r00);
IKReal x335=(cj5)*(cj5);
IKReal x336=(r22)*(r22);
IKReal x337=((IKReal(0.00183796000000000))*(r00));
IKReal x338=((IKReal(0.340000000000000))*(r11));
IKReal x339=((cj5)*(r22));
IKReal x340=((sj4)*(sj5));
IKReal x341=((r00)*(sj5));
IKReal x342=((sj5)*(x330));
IKReal x343=((IKReal(0.00466252000000000))*(x331));
IKReal x344=((sj5)*(x331));
IKReal x345=((x331)*(x333));
IKReal x346=((x330)*(x333));
IKReal x347=((x335)*(x336));
gconst1=IKsign(((IKReal(0.0182250000000000))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(0.00466252000000000))*(x330)*(x339)))+(((x330)*(x338)))+(((x330)*(x332)))+(((IKReal(-2.00000000000000))*(x331)*(x339)*(x341)))+(((IKReal(-1.00000000000000))*(x337)*(x345)))+(((IKReal(-1.00000000000000))*(x337)*(x346)))+(((x331)*(x338)))+(((x331)*(x332)))+(((IKReal(-0.270000000000000))*(sj4)*(x339)))+(((IKReal(-0.00466252000000000))*(x330)*(x341)))+(((x331)*(x347)))+(((IKReal(-2.00000000000000))*(x330)*(x339)*(x341)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(4.28476262960000e-6))*(x342)))+(((IKReal(4.28476262960000e-6))*(x344)))+(((IKReal(0.00183796000000000))*(x339)*(x342)))+(((IKReal(0.00183796000000000))*(x339)*(x344)))+(((IKReal(0.0289054347731876))*(x330)))+(((IKReal(0.0289054347731876))*(x331)))+(((IKReal(-1.00000000000000))*(x341)*(x343)))+(((IKReal(-0.000248124600000000))*(x340)))+(((IKReal(0.270000000000000))*(r00)*(x340)))+(((x339)*(x343)))+(((x330)*(x347)))+(((IKReal(8.44524240400000e-7))*(x345)))+(((IKReal(8.44524240400000e-7))*(x346)))+(((x334)*(x346)))+(((x334)*(x345)))));
IKReal x348=(cj4)*(cj4);
IKReal x349=(sj4)*(sj4);
IKReal x350=(sj5)*(sj5);
IKReal x351=(r00)*(r00);
IKReal x352=(cj5)*(cj5);
IKReal x353=(r22)*(r22);
IKReal x354=(r11)*(r11);
IKReal x355=((IKReal(402593.535786448))*(r11));
IKReal x356=((IKReal(5.07358157957736))*(sj5));
IKReal x357=((sj4)*(sj5));
IKReal x358=((IKReal(2176.32592657076))*(r00));
IKReal x359=((IKReal(2176.32592657076))*(sj5));
IKReal x360=((IKReal(1184098.63466602))*(x351));
IKReal x361=((IKReal(2368197.26933205))*(r00)*(sj5));
IKReal x362=((IKReal(1184098.63466602))*(x354));
IKReal x363=((IKReal(5520.88356610302))*(r00)*(sj5));
IKReal x364=((cj5)*(r22)*(x349));
IKReal x365=((x349)*(x350));
IKReal x366=((x348)*(x350));
IKReal x367=((cj5)*(r22)*(x348));
IKReal x368=((IKReal(1184098.63466602))*(x352)*(x353));
dummyeval[0]=((IKReal(21580.1976167883))+(((IKReal(54350.1273311704))*(cj4)))+(((IKReal(319706.631359826))*(cj4)*(r11)))+(((IKReal(-1.00000000000000))*(x361)*(x367)))+(((IKReal(-1.00000000000000))*(x361)*(x364)))+(((IKReal(-319706.631359826))*(cj5)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(x358)*(x366)))+(((IKReal(-1.00000000000000))*(x358)*(x365)))+(((IKReal(319706.631359826))*(r00)*(x357)))+(((IKReal(-745.319281423908))*(sj4)))+(((x359)*(x364)))+(((x359)*(x367)))+(x365)+(x366)+(((IKReal(5520.88356610302))*(x364)))+(((IKReal(5520.88356610302))*(x367)))+(((IKReal(-1.00000000000000))*(x348)*(x363)))+(((x349)*(x356)))+(((x349)*(x355)))+(((x348)*(x356)))+(((x348)*(x355)))+(((x349)*(x368)))+(((x349)*(x362)))+(((IKReal(-293.804000087053))*(x357)))+(((IKReal(-1.00000000000000))*(x349)*(x363)))+(((x348)*(x362)))+(((x348)*(x368)))+(((IKReal(34226.8858493592))*(x349)))+(((IKReal(34226.8858493592))*(x348)))+(((x360)*(x366)))+(((x360)*(x365))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2)))))), ((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IKReal evalcond[5];
IKReal x369=IKsin(j3);
IKReal x370=IKcos(j3);
IKReal x371=((IKReal(0.000284883800000000))*(sj5));
IKReal x372=((IKReal(1.00000000000000))*(r11));
IKReal x373=((IKReal(0.000918980000000000))*(sj5));
IKReal x374=((r11)*(sj2));
IKReal x375=((IKReal(0.170000000000000))*(sj2));
IKReal x376=((IKReal(0.310000000000000))*(r11));
IKReal x377=((IKReal(0.00233126000000000))*(sj2));
IKReal x378=((cj5)*(r22));
IKReal x379=((IKReal(0.00233126000000000))*(cj2));
IKReal x380=((px)*(sj1));
IKReal x381=((IKReal(0.135000000000000))*(cj2));
IKReal x382=((IKReal(0.170000000000000))*(cj2));
IKReal x383=((r00)*(sj5));
IKReal x384=((IKReal(0.270000000000000))*(sj4));
IKReal x385=((sj4)*(x369));
IKReal x386=((sj4)*(x370));
IKReal x387=((cj4)*(x370));
IKReal x388=((IKReal(1.00000000000000))*(x378));
IKReal x389=((cj4)*(x369));
IKReal x390=((IKReal(1.00000000000000))*(x383));
IKReal x391=((IKReal(1.00000000000000))*(cj1)*(py));
IKReal x392=((IKReal(0.135000000000000))*(x369));
IKReal x393=((IKReal(0.135000000000000))*(x370));
evalcond[0]=((IKReal(-0.155000000000000))+(((x378)*(x386)))+(((x378)*(x389)))+(((IKReal(0.00233126000000000))*(x386)))+(((IKReal(0.00233126000000000))*(x389)))+(((r11)*(x385)))+(((IKReal(-1.00000000000000))*(x393)))+(((IKReal(0.0330000000000000))*(sj2)))+(((x373)*(x389)))+(((x373)*(x386)))+(((IKReal(-1.00000000000000))*(sj2)*(x391)))+(((IKReal(-1.00000000000000))*(x386)*(x390)))+(((IKReal(-1.00000000000000))*(x389)*(x390)))+(((IKReal(-0.170000000000000))*(x387)))+(((IKReal(0.170000000000000))*(x385)))+(((cj2)*(pz)))+(((IKReal(-1.00000000000000))*(x372)*(x387)))+(((sj2)*(x380))));
evalcond[1]=((((x378)*(x385)))+(((IKReal(0.00233126000000000))*(x385)))+(((IKReal(-1.00000000000000))*(x373)*(x387)))+(((IKReal(-1.00000000000000))*(x392)))+(((x373)*(x385)))+(((cj2)*(x380)))+(((IKReal(-1.00000000000000))*(x385)*(x390)))+(((IKReal(-0.00233126000000000))*(x387)))+(((IKReal(-0.170000000000000))*(x386)))+(((IKReal(-0.170000000000000))*(x389)))+(((x383)*(x387)))+(((IKReal(-1.00000000000000))*(x387)*(x388)))+(((IKReal(-1.00000000000000))*(pz)*(sj2)))+(((IKReal(-1.00000000000000))*(cj2)*(x391)))+(((IKReal(0.0330000000000000))*(cj2)))+(((IKReal(-1.00000000000000))*(x372)*(x386)))+(((IKReal(-1.00000000000000))*(x372)*(x389))));
evalcond[2]=((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(-0.310000000000000))*(x378)*(x386)))+(((IKReal(-0.310000000000000))*(x378)*(x389)))+(((IKReal(0.0459000000000000))*(cj4)))+(((x376)*(x387)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(-0.000722690600000000))*(x389)))+(((IKReal(-0.000722690600000000))*(x386)))+(((IKReal(-1.00000000000000))*(x376)*(x385)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(-0.0527000000000000))*(x385)))+(((x383)*(x384)))+(((IKReal(0.310000000000000))*(x383)*(x386)))+(((IKReal(0.310000000000000))*(x383)*(x389)))+(((IKReal(-0.00466252000000000))*(x383)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.0660000000000000))*(x380)))+(((IKReal(0.0418500000000000))*(x370)))+(((IKReal(0.0527000000000000))*(x387)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-1.00000000000000))*(x378)*(x384)))+(((IKReal(0.00466252000000000))*(x378)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(-1.00000000000000))*(x371)*(x389)))+(((IKReal(-1.00000000000000))*(x371)*(x386))));
evalcond[3]=((((x377)*(x387)))+(((IKReal(-1.00000000000000))*(sj2)*(x385)*(x388)))+(((IKReal(-1.00000000000000))*(cj2)*(x389)*(x390)))+(((x374)*(x386)))+(((x374)*(x389)))+(((cj2)*(r11)*(x385)))+(((sj2)*(x383)*(x385)))+(((sj2)*(x392)))+(((x382)*(x385)))+(((IKReal(-1.00000000000000))*(cj2)*(x386)*(x390)))+(((x379)*(x386)))+(((x379)*(x389)))+(pz)+(((IKReal(-1.00000000000000))*(sj2)*(x373)*(x385)))+(((cj2)*(x373)*(x389)))+(((cj2)*(x373)*(x386)))+(((sj2)*(x378)*(x387)))+(((IKReal(-0.155000000000000))*(cj2)))+(((IKReal(-1.00000000000000))*(x377)*(x385)))+(((IKReal(-1.00000000000000))*(x370)*(x381)))+(((x375)*(x386)))+(((x375)*(x389)))+(((IKReal(-1.00000000000000))*(sj2)*(x387)*(x390)))+(((IKReal(-1.00000000000000))*(x382)*(x387)))+(((IKReal(-1.00000000000000))*(cj2)*(x372)*(x387)))+(((cj2)*(x378)*(x386)))+(((cj2)*(x378)*(x389)))+(((sj2)*(x373)*(x387))));
evalcond[4]=((IKReal(0.0330000000000000))+(((x377)*(x386)))+(((x377)*(x389)))+(((IKReal(-1.00000000000000))*(sj2)*(x386)*(x390)))+(((IKReal(-1.00000000000000))*(x391)))+(((IKReal(-1.00000000000000))*(x369)*(x381)))+(((IKReal(-1.00000000000000))*(sj2)*(x393)))+(((IKReal(-1.00000000000000))*(cj2)*(x387)*(x388)))+(((IKReal(-1.00000000000000))*(x379)*(x387)))+(((IKReal(-1.00000000000000))*(x375)*(x387)))+(((x374)*(x385)))+(((IKReal(-1.00000000000000))*(cj2)*(x385)*(x390)))+(x380)+(((cj2)*(x383)*(x387)))+(((x379)*(x385)))+(((IKReal(-1.00000000000000))*(sj2)*(x389)*(x390)))+(((cj2)*(x373)*(x385)))+(((sj2)*(x378)*(x386)))+(((sj2)*(x378)*(x389)))+(((IKReal(-0.155000000000000))*(sj2)))+(((IKReal(-1.00000000000000))*(cj2)*(x373)*(x387)))+(((IKReal(-1.00000000000000))*(sj2)*(x372)*(x387)))+(((x375)*(x385)))+(((IKReal(-1.00000000000000))*(x382)*(x389)))+(((IKReal(-1.00000000000000))*(x382)*(x386)))+(((IKReal(-1.00000000000000))*(cj2)*(x372)*(x389)))+(((IKReal(-1.00000000000000))*(cj2)*(x372)*(x386)))+(((cj2)*(x378)*(x385)))+(((sj2)*(x373)*(x386)))+(((sj2)*(x373)*(x389))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

{
vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
solution.basesol.resize(5);
solution.basesol[0].foffset = j1;
solution.basesol[0].indices[0] = _ij1[0];
solution.basesol[0].indices[1] = _ij1[1];
solution.basesol[0].maxsolutions = _nj1;
solution.basesol[1].foffset = j2;
solution.basesol[1].indices[0] = _ij2[0];
solution.basesol[1].indices[1] = _ij2[1];
solution.basesol[1].maxsolutions = _nj2;
solution.basesol[2].foffset = j3;
solution.basesol[2].indices[0] = _ij3[0];
solution.basesol[2].indices[1] = _ij3[1];
solution.basesol[2].maxsolutions = _nj3;
solution.basesol[3].foffset = j4;
solution.basesol[3].indices[0] = _ij4[0];
solution.basesol[3].indices[1] = _ij4[1];
solution.basesol[3].maxsolutions = _nj4;
solution.basesol[4].foffset = j5;
solution.basesol[4].indices[0] = _ij5[0];
solution.basesol[4].indices[1] = _ij5[1];
solution.basesol[4].maxsolutions = _nj5;
solution.vfree.resize(0);
}
}
}

}

}
}
}

}

}

} else
{
{
IKReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IKReal x394=((sj4)*(sj5));
IKReal x395=((cj5)*(r22));
IKReal x396=((px)*(sj1));
IKReal x397=((cj1)*(py));
IKReal x398=((IKReal(0.0102300000000000))+(((IKReal(-0.310000000000000))*(x397)))+(((IKReal(0.310000000000000))*(x396))));
if( IKabs(((IKReal(0.310000000000000))*(pz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(x398) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IKReal x399=((IKReal(1.00000000000000))*(IKatan2(((IKReal(0.310000000000000))*(pz)), x398)));
if( (((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398)))) < (IKReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.000248124600000000))*(x394)))+(((IKReal(-0.0660000000000000))*(x396)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(0.270000000000000))*(r00)*(x394)))+(((IKReal(0.0660000000000000))*(x397)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.270000000000000))*(sj4)*(x395)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x395))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.000248124600000000))*(x394)))+(((IKReal(-0.0660000000000000))*(x396)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(0.270000000000000))*(r00)*(x394)))+(((IKReal(0.0660000000000000))*(x397)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.270000000000000))*(sj4)*(x395)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x395))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IKReal x400=IKasin(((((IKabs(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398)))))) != 0)?((IKReal)1/(IKabs(IKsqrt(((((IKReal(0.0961000000000000))*((pz)*(pz))))+((x398)*(x398))))))):(IKReal)1.0e30))*(((IKReal(0.0220172792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(-0.000248124600000000))*(x394)))+(((IKReal(-0.0660000000000000))*(x396)))+((r22)*(r22))+((r11)*(r11))+(((IKReal(0.270000000000000))*(r00)*(x394)))+(((IKReal(0.0660000000000000))*(x397)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-0.270000000000000))*(sj4)*(x395)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(-0.00466252000000000))*(r00)*(sj5)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(0.00466252000000000))*(x395)))))));
j2array[0]=((((IKReal(-1.00000000000000))*(x399)))+(((IKReal(-1.00000000000000))*(x400))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IKReal(3.14159265358979))+(((IKReal(-1.00000000000000))*(x399)))+(x400));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IKReal dummyeval[1];
IKReal gconst1;
IKReal x401=(sj4)*(sj4);
IKReal x402=(cj4)*(cj4);
IKReal x403=(r11)*(r11);
IKReal x404=(sj5)*(sj5);
IKReal x405=(r00)*(r00);
IKReal x406=(cj5)*(cj5);
IKReal x407=(r22)*(r22);
IKReal x408=((IKReal(0.00183796000000000))*(r00));
IKReal x409=((IKReal(0.340000000000000))*(r11));
IKReal x410=((cj5)*(r22));
IKReal x411=((sj4)*(sj5));
IKReal x412=((r00)*(sj5));
IKReal x413=((sj5)*(x401));
IKReal x414=((IKReal(0.00466252000000000))*(x402));
IKReal x415=((sj5)*(x402));
IKReal x416=((x402)*(x404));
IKReal x417=((x401)*(x404));
IKReal x418=((x406)*(x407));
gconst1=IKsign(((IKReal(0.0182250000000000))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.00466252000000000))*(x401)*(x410)))+(((IKReal(0.0459000000000000))*(cj4)))+(((x405)*(x417)))+(((x405)*(x416)))+(((IKReal(-1.00000000000000))*(x412)*(x414)))+(((x410)*(x414)))+(((IKReal(-2.00000000000000))*(x402)*(x410)*(x412)))+(((IKReal(-0.270000000000000))*(sj4)*(x410)))+(((IKReal(-0.00466252000000000))*(x401)*(x412)))+(((IKReal(8.44524240400000e-7))*(x417)))+(((IKReal(8.44524240400000e-7))*(x416)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(0.0289054347731876))*(x402)))+(((IKReal(0.0289054347731876))*(x401)))+(((IKReal(-0.000248124600000000))*(x411)))+(((IKReal(0.270000000000000))*(r00)*(x411)))+(((IKReal(0.00183796000000000))*(x410)*(x413)))+(((IKReal(0.00183796000000000))*(x410)*(x415)))+(((x402)*(x418)))+(((IKReal(4.28476262960000e-6))*(x415)))+(((IKReal(4.28476262960000e-6))*(x413)))+(((x401)*(x418)))+(((x402)*(x409)))+(((x402)*(x403)))+(((IKReal(-1.00000000000000))*(x408)*(x416)))+(((IKReal(-1.00000000000000))*(x408)*(x417)))+(((IKReal(-2.00000000000000))*(x401)*(x410)*(x412)))+(((x401)*(x409)))+(((x401)*(x403)))));
IKReal x419=(cj4)*(cj4);
IKReal x420=(sj4)*(sj4);
IKReal x421=(sj5)*(sj5);
IKReal x422=(r00)*(r00);
IKReal x423=(cj5)*(cj5);
IKReal x424=(r22)*(r22);
IKReal x425=(r11)*(r11);
IKReal x426=((IKReal(402593.535786448))*(r11));
IKReal x427=((IKReal(5.07358157957736))*(sj5));
IKReal x428=((sj4)*(sj5));
IKReal x429=((IKReal(2176.32592657076))*(r00));
IKReal x430=((IKReal(2176.32592657076))*(sj5));
IKReal x431=((IKReal(1184098.63466602))*(x422));
IKReal x432=((IKReal(2368197.26933205))*(r00)*(sj5));
IKReal x433=((IKReal(1184098.63466602))*(x425));
IKReal x434=((IKReal(5520.88356610302))*(r00)*(sj5));
IKReal x435=((cj5)*(r22)*(x420));
IKReal x436=((x420)*(x421));
IKReal x437=((x419)*(x421));
IKReal x438=((cj5)*(r22)*(x419));
IKReal x439=((IKReal(1184098.63466602))*(x423)*(x424));
dummyeval[0]=((IKReal(21580.1976167883))+(((x420)*(x426)))+(((x420)*(x427)))+(((IKReal(54350.1273311704))*(cj4)))+(((IKReal(319706.631359826))*(cj4)*(r11)))+(((IKReal(-293.804000087053))*(x428)))+(((IKReal(-1.00000000000000))*(x432)*(x435)))+(((IKReal(-1.00000000000000))*(x432)*(x438)))+(((IKReal(-319706.631359826))*(cj5)*(r22)*(sj4)))+(((IKReal(-1.00000000000000))*(x420)*(x434)))+(((IKReal(-1.00000000000000))*(x429)*(x437)))+(((IKReal(-1.00000000000000))*(x429)*(x436)))+(((IKReal(-745.319281423908))*(sj4)))+(((x419)*(x427)))+(((x419)*(x426)))+(((IKReal(34226.8858493592))*(x420)))+(((x419)*(x433)))+(((x419)*(x439)))+(x436)+(x437)+(((x430)*(x435)))+(((x430)*(x438)))+(((IKReal(34226.8858493592))*(x419)))+(((IKReal(5520.88356610302))*(x438)))+(((IKReal(5520.88356610302))*(x435)))+(((x431)*(x437)))+(((x431)*(x436)))+(((IKReal(319706.631359826))*(r00)*(x428)))+(((x420)*(x433)))+(((x420)*(x439)))+(((IKReal(-1.00000000000000))*(x419)*(x434))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IKReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((IKReal(-0.155000000000000))*(cj4)*(r00)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(pz)*(r11)*(sj2)))+(((IKReal(-0.00233126000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(-0.0330000000000000))*(cj4)*(cj5)*(r22)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(pz)*(r00)*(sj2)*(sj4)*(sj5)))+(((cj1)*(py)*(r11)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r00)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(px)*(sj1)*(sj4)*(sj5)))+(((IKReal(-0.0330000000000000))*(r11)*(sj2)*(sj4)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(0.00445500000000000))*(cj2)))+(((IKReal(-7.69315800000000e-5))*(cj2)*(sj4)))+(((IKReal(0.000361345300000000))*(cj4)))+(((IKReal(0.00561000000000000))*(cj2)*(cj4)))+(((IKReal(0.0263500000000000))*(sj4)))+(((IKReal(0.000142441900000000))*(cj4)*(sj5)))+(((cj1)*(cj2)*(cj5)*(py)*(r22)*(sj4)))+(((IKReal(-0.170000000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(-0.170000000000000))*(cj4)*(pz)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj5)*(r22)*(sj4)))+(((cj4)*(px)*(r00)*(sj1)*(sj2)*(sj5)))+(((IKReal(-0.000918980000000000))*(cj2)*(cj4)*(pz)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(0.0330000000000000))*(cj2)*(r00)*(sj4)*(sj5)))+(((IKReal(-3.03263400000000e-5))*(cj2)*(sj4)*(sj5)))+(((IKReal(0.135000000000000))*(cj2)*(px)*(sj1)))+(((IKReal(0.0330000000000000))*(cj4)*(r00)*(sj2)*(sj5)))+(((cj2)*(cj4)*(px)*(r11)*(sj1)))+(((IKReal(-7.69315800000000e-5))*(cj4)*(sj2)))+(((cj2)*(px)*(r00)*(sj1)*(sj4)*(sj5)))+(((cj5)*(pz)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj4)*(px)*(sj1)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r00)*(sj4)*(sj5)))+(((IKReal(-0.135000000000000))*(pz)*(sj2)))+(((IKReal(0.155000000000000))*(r11)*(sj4)))+(((IKReal(0.170000000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(pz)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(pz)*(r11)*(sj4)))+(((IKReal(-0.00561000000000000))*(sj2)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(0.00233126000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(cj4)*(py)*(sj2)*(sj5)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(px)*(r22)*(sj1)*(sj2)))+(((IKReal(0.155000000000000))*(cj4)*(cj5)*(r22)))+(((IKReal(-3.03263400000000e-5))*(cj4)*(sj2)*(sj5)))+(((IKReal(-0.170000000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(cj5)*(pz)*(r22)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(py)*(r11)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(r11)))+(((IKReal(0.000918980000000000))*(cj1)*(cj2)*(py)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(px)*(r11)*(sj1)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(px)*(r22)*(sj1)*(sj4)))+(((cj2)*(cj4)*(pz)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(cj2)*(py)))+(((cj1)*(cj4)*(cj5)*(py)*(r22)*(sj2)))))), ((gconst1)*(((IKReal(-0.0209250000000000))+(((IKReal(0.000361345300000000))*(sj4)))+(((IKReal(-1.00000000000000))*(pz)*(r11)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj1)*(py)*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.170000000000000))*(pz)*(sj2)*(sj4)))+(((IKReal(-1.00000000000000))*(cj2)*(cj4)*(px)*(r00)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(cj4)*(cj5)*(py)*(r22)))+(((IKReal(7.69315800000000e-5))*(cj2)*(cj4)))+(((IKReal(0.00445500000000000))*(sj2)))+(((IKReal(0.135000000000000))*(cj2)*(pz)))+(((IKReal(0.0330000000000000))*(cj2)*(cj4)*(cj5)*(r22)))+(((IKReal(-0.00233126000000000))*(cj1)*(cj2)*(cj4)*(py)))+(((IKReal(-0.000918980000000000))*(cj4)*(pz)*(sj2)*(sj5)))+(((cj1)*(cj2)*(cj4)*(py)*(r00)*(sj5)))+(((cj2)*(cj4)*(pz)*(r11)))+(((IKReal(-1.00000000000000))*(cj4)*(cj5)*(pz)*(r22)*(sj2)))+(((IKReal(0.00561000000000000))*(cj4)*(sj2)))+(((IKReal(-0.0330000000000000))*(cj5)*(r22)*(sj2)*(sj4)))+(((cj1)*(cj5)*(py)*(r22)*(sj2)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj1)*(cj2)*(cj4)*(py)*(sj5)))+(((IKReal(-7.69315800000000e-5))*(sj2)*(sj4)))+(((IKReal(0.135000000000000))*(px)*(sj1)*(sj2)))+(((cj2)*(px)*(r11)*(sj1)*(sj4)))+(((cj2)*(pz)*(r00)*(sj4)*(sj5)))+(((IKReal(0.0330000000000000))*(cj2)*(r11)*(sj4)))+(((IKReal(-0.170000000000000))*(cj1)*(cj2)*(py)*(sj4)))+(((cj4)*(pz)*(r00)*(sj2)*(sj5)))+(((IKReal(0.000918980000000000))*(cj2)*(cj4)*(px)*(sj1)*(sj5)))+(((IKReal(-1.00000000000000))*(cj2)*(cj5)*(pz)*(r22)*(sj4)))+(((IKReal(-0.0330000000000000))*(cj2)*(cj4)*(r00)*(sj5)))+(((IKReal(-0.135000000000000))*(cj1)*(py)*(sj2)))+(((IKReal(-0.170000000000000))*(cj1)*(cj4)*(py)*(sj2)))+(((IKReal(-1.00000000000000))*(cj1)*(cj2)*(py)*(r11)*(sj4)))+(((IKReal(-0.000918980000000000))*(cj2)*(pz)*(sj4)*(sj5)))+(((cj4)*(px)*(r11)*(sj1)*(sj2)))+(((IKReal(0.000142441900000000))*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj4)*(px)*(sj1)*(sj2)))+(((IKReal(-0.000918980000000000))*(px)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj5)*(px)*(r22)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.000918980000000000))*(cj1)*(py)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.170000000000000))*(cj2)*(cj4)*(pz)))+(((IKReal(0.0330000000000000))*(r00)*(sj2)*(sj4)*(sj5)))+(((IKReal(0.155000000000000))*(cj5)*(r22)*(sj4)))+(((IKReal(3.03263400000000e-5))*(cj2)*(cj4)*(sj5)))+(((IKReal(-0.0263500000000000))*(cj4)))+(((IKReal(0.00233126000000000))*(cj1)*(py)*(sj2)*(sj4)))+(((IKReal(0.0330000000000000))*(cj4)*(r11)*(sj2)))+(((IKReal(-0.155000000000000))*(r00)*(sj4)*(sj5)))+(((IKReal(-1.00000000000000))*(cj1)*(cj4)*(py)*(r11)*(sj2)))+(((IKReal(0.170000000000000))*(cj2)*(px)*(sj1)*(sj4)))+(((IKReal(-0.00233126000000000))*(cj4)*(pz)*(sj2)))+(((cj2)*(cj4)*(cj5)*(px)*(r22)*(sj1)))+(((IKReal(-3.03263400000000e-5))*(sj2)*(sj4)*(sj5)))+(((IKReal(0.00561000000000000))*(cj2)*(sj4)))+(((px)*(r00)*(sj1)*(sj2)*(sj4)*(sj5)))+(((IKReal(-0.00233126000000000))*(cj2)*(pz)*(sj4)))+(((IKReal(-0.00233126000000000))*(px)*(sj1)*(sj2)*(sj4)))+(((IKReal(0.00233126000000000))*(cj2)*(cj4)*(px)*(sj1)))+(((IKReal(-0.155000000000000))*(cj4)*(r11)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IKReal evalcond[5];
IKReal x440=IKsin(j3);
IKReal x441=IKcos(j3);
IKReal x442=((IKReal(0.000284883800000000))*(sj5));
IKReal x443=((IKReal(1.00000000000000))*(r11));
IKReal x444=((IKReal(0.000918980000000000))*(sj5));
IKReal x445=((r11)*(sj2));
IKReal x446=((IKReal(0.170000000000000))*(sj2));
IKReal x447=((IKReal(0.310000000000000))*(r11));
IKReal x448=((IKReal(0.00233126000000000))*(sj2));
IKReal x449=((cj5)*(r22));
IKReal x450=((IKReal(0.00233126000000000))*(cj2));
IKReal x451=((px)*(sj1));
IKReal x452=((IKReal(0.135000000000000))*(cj2));
IKReal x453=((IKReal(0.170000000000000))*(cj2));
IKReal x454=((r00)*(sj5));
IKReal x455=((IKReal(0.270000000000000))*(sj4));
IKReal x456=((sj4)*(x440));
IKReal x457=((sj4)*(x441));
IKReal x458=((cj4)*(x441));
IKReal x459=((IKReal(1.00000000000000))*(x449));
IKReal x460=((cj4)*(x440));
IKReal x461=((IKReal(1.00000000000000))*(x454));
IKReal x462=((IKReal(1.00000000000000))*(cj1)*(py));
IKReal x463=((IKReal(0.135000000000000))*(x440));
IKReal x464=((IKReal(0.135000000000000))*(x441));
evalcond[0]=((IKReal(-0.155000000000000))+(((IKReal(-1.00000000000000))*(x443)*(x458)))+(((sj2)*(x451)))+(((IKReal(0.170000000000000))*(x456)))+(((IKReal(0.0330000000000000))*(sj2)))+(((IKReal(-1.00000000000000))*(x460)*(x461)))+(((IKReal(-1.00000000000000))*(x464)))+(((IKReal(-1.00000000000000))*(sj2)*(x462)))+(((IKReal(-0.170000000000000))*(x458)))+(((x449)*(x457)))+(((IKReal(0.00233126000000000))*(x457)))+(((x449)*(x460)))+(((cj2)*(pz)))+(((r11)*(x456)))+(((IKReal(0.00233126000000000))*(x460)))+(((x444)*(x460)))+(((x444)*(x457)))+(((IKReal(-1.00000000000000))*(x457)*(x461))));
evalcond[1]=((((IKReal(-1.00000000000000))*(x443)*(x457)))+(((x454)*(x458)))+(((IKReal(-1.00000000000000))*(x456)*(x461)))+(((IKReal(-1.00000000000000))*(x463)))+(((IKReal(-0.170000000000000))*(x460)))+(((cj2)*(x451)))+(((IKReal(-0.170000000000000))*(x457)))+(((x449)*(x456)))+(((IKReal(0.00233126000000000))*(x456)))+(((IKReal(-1.00000000000000))*(pz)*(sj2)))+(((IKReal(0.0330000000000000))*(cj2)))+(((IKReal(-1.00000000000000))*(x458)*(x459)))+(((x444)*(x456)))+(((IKReal(-1.00000000000000))*(cj2)*(x462)))+(((IKReal(-1.00000000000000))*(x444)*(x458)))+(((IKReal(-0.00233126000000000))*(x458)))+(((IKReal(-1.00000000000000))*(x443)*(x460))));
evalcond[2]=((IKReal(0.0700672792974280))+(((IKReal(-0.000629440200000000))*(sj4)))+(((IKReal(0.0459000000000000))*(cj4)))+(((IKReal(0.0527000000000000))*(x458)))+(((x454)*(x455)))+((r22)*(r22))+(((IKReal(0.0660000000000000))*(cj1)*(py)))+((r11)*(r11))+(((IKReal(0.310000000000000))*(x454)*(x460)))+(((IKReal(-0.0660000000000000))*(x451)))+(((IKReal(-0.000248124600000000))*(sj4)*(sj5)))+(((IKReal(0.0418500000000000))*(x441)))+(((IKReal(0.310000000000000))*(x454)*(x457)))+(((x447)*(x458)))+(((IKReal(-1.00000000000000))*(x447)*(x456)))+((r00)*(r00))+(((IKReal(-1.00000000000000))*(x442)*(x457)))+(((IKReal(-1.00000000000000))*(pp)))+(((IKReal(-0.00466252000000000))*(x454)))+(((IKReal(0.270000000000000))*(cj4)*(r11)))+(((IKReal(-1.00000000000000))*(x442)*(x460)))+(((IKReal(0.340000000000000))*(r11)))+(((IKReal(4.28476262960000e-6))*(sj5)))+(((IKReal(-0.000722690600000000))*(x460)))+(((IKReal(-0.310000000000000))*(x449)*(x460)))+(((IKReal(-0.000722690600000000))*(x457)))+(((IKReal(-0.310000000000000))*(x449)*(x457)))+(((IKReal(0.00466252000000000))*(x449)))+(((IKReal(-0.00183796000000000))*(r00)))+(((IKReal(-1.00000000000000))*(x449)*(x455)))+(((IKReal(-0.0527000000000000))*(x456))));
evalcond[3]=((((cj2)*(x449)*(x460)))+(((sj2)*(x444)*(x458)))+(((sj2)*(x454)*(x456)))+(((IKReal(-1.00000000000000))*(cj2)*(x457)*(x461)))+(((x453)*(x456)))+(((IKReal(-1.00000000000000))*(sj2)*(x456)*(x459)))+(((x446)*(x460)))+(((cj2)*(r11)*(x456)))+(((x446)*(x457)))+(((cj2)*(x444)*(x457)))+(pz)+(((IKReal(-1.00000000000000))*(x453)*(x458)))+(((IKReal(-1.00000000000000))*(cj2)*(x460)*(x461)))+(((cj2)*(x444)*(x460)))+(((IKReal(-1.00000000000000))*(sj2)*(x458)*(x461)))+(((x448)*(x458)))+(((x450)*(x460)))+(((IKReal(-0.155000000000000))*(cj2)))+(((x450)*(x457)))+(((x445)*(x457)))+(((IKReal(-1.00000000000000))*(cj2)*(x443)*(x458)))+(((x445)*(x460)))+(((sj2)*(x449)*(x458)))+(((IKReal(-1.00000000000000))*(sj2)*(x444)*(x456)))+(((cj2)*(x449)*(x457)))+(((IKReal(-1.00000000000000))*(x448)*(x456)))+(((IKReal(-1.00000000000000))*(x441)*(x452)))+(((sj2)*(x463))));
evalcond[4]=((IKReal(0.0330000000000000))+(((IKReal(-1.00000000000000))*(x446)*(x458)))+(((sj2)*(x444)*(x457)))+(((IKReal(-1.00000000000000))*(x440)*(x452)))+(((IKReal(-1.00000000000000))*(cj2)*(x458)*(x459)))+(((IKReal(-1.00000000000000))*(sj2)*(x457)*(x461)))+(((IKReal(-1.00000000000000))*(sj2)*(x443)*(x458)))+(((IKReal(-1.00000000000000))*(x462)))+(((IKReal(-1.00000000000000))*(sj2)*(x464)))+(((x446)*(x456)))+(x451)+(((IKReal(-1.00000000000000))*(x453)*(x460)))+(((cj2)*(x444)*(x456)))+(((x448)*(x460)))+(((IKReal(-1.00000000000000))*(x453)*(x457)))+(((IKReal(-1.00000000000000))*(x450)*(x458)))+(((x448)*(x457)))+(((IKReal(-0.155000000000000))*(sj2)))+(((x450)*(x456)))+(((IKReal(-1.00000000000000))*(cj2)*(x444)*(x458)))+(((x445)*(x456)))+(((IKReal(-1.00000000000000))*(cj2)*(x443)*(x457)))+(((sj2)*(x449)*(x457)))+(((IKReal(-1.00000000000000))*(cj2)*(x443)*(x460)))+(((IKReal(-1.00000000000000))*(sj2)*(x460)*(x461)))+(((cj2)*(x454)*(x458)))+(((IKReal(-1.00000000000000))*(cj2)*(x456)*(x461)))+(((sj2)*(x449)*(x460)))+(((cj2)*(x449)*(x456)))+(((sj2)*(x444)*(x460))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

{
vsolutions.push_back(IKSolution()); IKSolution& solution = vsolutions.back();
solution.basesol.resize(5);
solution.basesol[0].foffset = j1;
solution.basesol[0].indices[0] = _ij1[0];
solution.basesol[0].indices[1] = _ij1[1];
solution.basesol[0].maxsolutions = _nj1;
solution.basesol[1].foffset = j2;
solution.basesol[1].indices[0] = _ij2[0];
solution.basesol[1].indices[1] = _ij2[1];
solution.basesol[1].maxsolutions = _nj2;
solution.basesol[2].foffset = j3;
solution.basesol[2].indices[0] = _ij3[0];
solution.basesol[2].indices[1] = _ij3[1];
solution.basesol[2].maxsolutions = _nj3;
solution.basesol[3].foffset = j4;
solution.basesol[3].indices[0] = _ij4[0];
solution.basesol[3].indices[1] = _ij4[1];
solution.basesol[3].maxsolutions = _nj4;
solution.basesol[4].foffset = j5;
solution.basesol[4].indices[0] = _ij5[0];
solution.basesol[4].indices[1] = _ij5[1];
solution.basesol[4].maxsolutions = _nj5;
solution.vfree.resize(0);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
return vsolutions.size()>0;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ik(const IKReal* eetrans, const IKReal* eerot, const IKReal* pfree, std::vector<IKSolution>& vsolutions) {
IKSolver solver;
return solver.ik(eetrans,eerot,pfree,vsolutions);
}

IKFAST_API const char* getKinematicsHash() { return "8746506cee5bd638a55a80ffc6235292"; }

IKFAST_API const char* getIKFastVersion() { return "59"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+getNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",getNumFreeParameters());
        return 1;
    }

    std::vector<IKSolution> vsolutions;
    std::vector<IKReal> vfree(getNumFreeParameters());
    IKReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ik(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, vsolutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)vsolutions.size());
    std::vector<IKReal> sol(getNumJoints());
    for(std::size_t i = 0; i < vsolutions.size(); ++i) {
        printf("sol%d (free=%d): ", (int)i, (int)vsolutions[i].GetFree().size());
        std::vector<IKReal> vsolfree(vsolutions[i].GetFree().size());
        vsolutions[i].GetSolution(&sol[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < sol.size(); ++j)
            printf("%.15f, ", sol[j]);
        printf("\n");
    }
    return 0;
}

#endif
